<?xml version="1.0" encoding="utf-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<key id="witness-type" attr.name="witness-type" attr.type="string" for="graph"/>
	<key id="assumption" attr.name="assumption" attr.type="string" for="edge"/>
	<key id="sourcecode" attr.name="sourcecode" attr.type="string" for="edge"/>
	<key id="sourcecodelang" attr.name="sourcecodeLanguage" attr.type="string" for="graph"/>
	<key id="control" attr.name="control" attr.type="string" for="edge"/>
	<key id="startline" attr.name="startline" attr.type="int" for="edge"/>
	<key id="endline" attr.name="endline" attr.type="int" for="edge"/>
	<key id="originfile" attr.name="originFileName" attr.type="string" for="edge">
		<default>../../sv-benchmarks/c/loops/string_false-unreach-call.i</default>
	</key>
	<key id="invariant" attr.name="invariant" attr.type="string" for="node"/>
	<key id="invariant.scope" attr.name="invariant.scope" attr.type="string" for="node"/>
	<key id="nodetype" attr.name="nodeType" attr.type="string" for="node">
		<default>path</default>
	</key>
	<key id="frontier" attr.name="isFrontierNode" attr.type="boolean" for="node">
		<default>false</default>
	</key>
	<key id="violation" attr.name="isViolationNode" attr.type="boolean" for="node">
		<default>false</default>
	</key>
	<key id="entry" attr.name="isEntryNode" attr.type="boolean" for="node">
		<default>false</default>
	</key>
	<key id="sink" attr.name="isSinkNode" attr.type="boolean" for="node">
		<default>false</default>
	</key>
	<key id="enterFunction" attr.name="enterFunction" attr.type="string" for="edge"/>
	<key id="returnFrom" attr.name="returnFromFunction" attr.type="string" for="edge"/>
	<graph edgedefault="directed">
		<data key="sourcecodelang">C</data>
		<node id="n0">
			<data key="entry">true</data>
		</node>
		<node id="n1"/>
		<edge id="e0" source="n0" target="n1">
			<data key="startline">29</data>
			<data key="endline">29</data>
			<data key="enterFunction">main</data>
			<data key="assumption">num_total_threads = 0;</data>
		</edge>
		<node id="n2"/>
		<edge id="e1" source="n1" target="n2">
			<data key="startline">30</data>
			<data key="endline">30</data>
			<data key="assumption">num_threads_running = 0;</data>
		</edge>
		<node id="n3"/>
		<edge id="e2" source="n2" target="n3">
			<data key="startline">44</data>
			<data key="endline">44</data>
			<data key="enterFunction">pthread_start_main_hook</data>
			<data key="assumption">num_total_threads = 1;</data>
		</edge>
		<node id="n4"/>
		<edge id="e3" source="n3" target="n4">
			<data key="startline">45</data>
			<data key="endline">45</data>
			<data key="assumption">num_threads_running = 1;</data>
		</edge>
		<node id="n5"/>
		<edge id="e4" source="n4" target="n5">
			<data key="sourcecode">int i, j, nc_A, nc_B, found=0;</data>
			<data key="startline">18</data>
			<data key="endline">18</data>
			<data key="enterFunction">main</data>
			<data key="assumption">found = 0;</data>
		</edge>
		<node id="n6"/>
		<edge id="e5" source="n5" target="n6">
			<data key="sourcecode">for(i=0; i&lt;5; i++)</data>
			<data key="startline">21</data>
			<data key="endline">21</data>
			<data key="assumption">i = 0;</data>
		</edge>
		<node id="n7"/>
		<edge id="e6" source="n6" target="n7">
			<data key="sourcecode">string_A[i]=__VERIFIER_nondet_char();</data>
			<data key="startline">22</data>
			<data key="endline">22</data>
		</edge>
		<node id="n8"/>
		<edge id="e7" source="n7" target="n8">
			<data key="sourcecode">for(i=0; i&lt;5; i++)</data>
			<data key="startline">21</data>
			<data key="endline">21</data>
			<data key="assumption">i = 1;</data>
		</edge>
		<node id="n9"/>
		<edge id="e8" source="n8" target="n9">
			<data key="sourcecode">string_A[i]=__VERIFIER_nondet_char();</data>
			<data key="startline">22</data>
			<data key="endline">22</data>
		</edge>
		<node id="n10"/>
		<edge id="e9" source="n9" target="n10">
			<data key="sourcecode">for(i=0; i&lt;5; i++)</data>
			<data key="startline">21</data>
			<data key="endline">21</data>
			<data key="assumption">i = 2;</data>
		</edge>
		<node id="n11"/>
		<edge id="e10" source="n10" target="n11">
			<data key="sourcecode">string_A[i]=__VERIFIER_nondet_char();</data>
			<data key="startline">22</data>
			<data key="endline">22</data>
		</edge>
		<node id="n12"/>
		<edge id="e11" source="n11" target="n12">
			<data key="sourcecode">for(i=0; i&lt;5; i++)</data>
			<data key="startline">21</data>
			<data key="endline">21</data>
			<data key="assumption">i = 3;</data>
		</edge>
		<node id="n13"/>
		<edge id="e12" source="n12" target="n13">
			<data key="sourcecode">string_A[i]=__VERIFIER_nondet_char();</data>
			<data key="startline">22</data>
			<data key="endline">22</data>
		</edge>
		<node id="n14"/>
		<edge id="e13" source="n13" target="n14">
			<data key="sourcecode">for(i=0; i&lt;5; i++)</data>
			<data key="startline">21</data>
			<data key="endline">21</data>
			<data key="assumption">i = 4;</data>
		</edge>
		<node id="n15"/>
		<edge id="e14" source="n14" target="n15">
			<data key="sourcecode">string_A[i]=__VERIFIER_nondet_char();</data>
			<data key="startline">22</data>
			<data key="endline">22</data>
		</edge>
		<node id="n16"/>
		<edge id="e15" source="n15" target="n16">
			<data key="sourcecode">for(i=0; i&lt;5; i++)</data>
			<data key="startline">21</data>
			<data key="endline">21</data>
			<data key="assumption">i = 5;</data>
		</edge>
		<node id="n17"/>
		<edge id="e16" source="n16" target="n17">
			<data key="sourcecode">for(i=0; i&lt;5; i++)</data>
			<data key="startline">25</data>
			<data key="endline">25</data>
			<data key="assumption">i = 0;</data>
		</edge>
		<node id="n18"/>
		<edge id="e17" source="n17" target="n18">
			<data key="sourcecode">string_B[i]=__VERIFIER_nondet_char();</data>
			<data key="startline">26</data>
			<data key="endline">26</data>
		</edge>
		<node id="n19"/>
		<edge id="e18" source="n18" target="n19">
			<data key="sourcecode">for(i=0; i&lt;5; i++)</data>
			<data key="startline">25</data>
			<data key="endline">25</data>
			<data key="assumption">i = 1;</data>
		</edge>
		<node id="n20"/>
		<edge id="e19" source="n19" target="n20">
			<data key="sourcecode">string_B[i]=__VERIFIER_nondet_char();</data>
			<data key="startline">26</data>
			<data key="endline">26</data>
		</edge>
		<node id="n21"/>
		<edge id="e20" source="n20" target="n21">
			<data key="sourcecode">for(i=0; i&lt;5; i++)</data>
			<data key="startline">25</data>
			<data key="endline">25</data>
			<data key="assumption">i = 2;</data>
		</edge>
		<node id="n22"/>
		<edge id="e21" source="n21" target="n22">
			<data key="sourcecode">string_B[i]=__VERIFIER_nondet_char();</data>
			<data key="startline">26</data>
			<data key="endline">26</data>
		</edge>
		<node id="n23"/>
		<edge id="e22" source="n22" target="n23">
			<data key="sourcecode">for(i=0; i&lt;5; i++)</data>
			<data key="startline">25</data>
			<data key="endline">25</data>
			<data key="assumption">i = 3;</data>
		</edge>
		<node id="n24"/>
		<edge id="e23" source="n23" target="n24">
			<data key="sourcecode">string_B[i]=__VERIFIER_nondet_char();</data>
			<data key="startline">26</data>
			<data key="endline">26</data>
		</edge>
		<node id="n25"/>
		<edge id="e24" source="n24" target="n25">
			<data key="sourcecode">for(i=0; i&lt;5; i++)</data>
			<data key="startline">25</data>
			<data key="endline">25</data>
			<data key="assumption">i = 4;</data>
		</edge>
		<node id="n26"/>
		<edge id="e25" source="n25" target="n26">
			<data key="sourcecode">string_B[i]=__VERIFIER_nondet_char();</data>
			<data key="startline">26</data>
			<data key="endline">26</data>
		</edge>
		<node id="n27"/>
		<edge id="e26" source="n26" target="n27">
			<data key="sourcecode">for(i=0; i&lt;5; i++)</data>
			<data key="startline">25</data>
			<data key="endline">25</data>
			<data key="assumption">i = 5;</data>
		</edge>
		<node id="n28"/>
		<edge id="e27" source="n27" target="n28">
			<data key="sourcecode">nc_A = 0;</data>
			<data key="startline">29</data>
			<data key="endline">29</data>
			<data key="assumption">nc_A = 0;</data>
		</edge>
		<node id="n29"/>
		<edge id="e28" source="n28" target="n29">
			<data key="sourcecode">nc_A++;</data>
			<data key="startline">31</data>
			<data key="endline">31</data>
			<data key="assumption">nc_A = 1;</data>
		</edge>
		<node id="n30"/>
		<edge id="e29" source="n29" target="n30">
			<data key="sourcecode">nc_B = 0;</data>
			<data key="startline">33</data>
			<data key="endline">33</data>
			<data key="assumption">nc_B = 0;</data>
		</edge>
		<node id="n31"/>
		<edge id="e30" source="n30" target="n31">
			<data key="sourcecode">nc_B++;</data>
			<data key="startline">35</data>
			<data key="endline">35</data>
			<data key="assumption">nc_B = 1;</data>
		</edge>
		<node id="n32"/>
		<edge id="e31" source="n31" target="n32">
			<data key="sourcecode">i=j=0;</data>
			<data key="startline">40</data>
			<data key="endline">40</data>
			<data key="assumption">j = 0;</data>
		</edge>
		<node id="n33"/>
		<edge id="e32" source="n32" target="n33">
			<data key="sourcecode">i=j=0;</data>
			<data key="startline">40</data>
			<data key="endline">40</data>
			<data key="assumption">i = 0;</data>
		</edge>
		<node id="n34"/>
		<edge id="e33" source="n33" target="n34">
			<data key="sourcecode">i++;</data>
			<data key="startline">45</data>
			<data key="endline">45</data>
			<data key="assumption">i = 1;</data>
		</edge>
		<node id="n35"/>
		<edge id="e34" source="n34" target="n35">
			<data key="sourcecode">j++;</data>
			<data key="startline">46</data>
			<data key="endline">46</data>
			<data key="assumption">j = 1;</data>
		</edge>
		<node id="n36"/>
		<edge id="e35" source="n35" target="n36">
			<data key="sourcecode">found = (j&gt;nc_B-1)&lt;&lt;i;</data>
			<data key="startline">55</data>
			<data key="endline">55</data>
			<data key="assumption">found = 2;</data>
		</edge>
		<node id="n37"/>
		<edge id="e36" source="n36" target="n37">
			<data key="sourcecode">__VERIFIER_assert(found == 0 || found == 1);</data>
			<data key="startline">57</data>
			<data key="endline">57</data>
			<data key="assumption">cond = 0;</data>
		</edge>
		<node id="n38">
			<data key="violation">true</data>
		</node>
		<edge id="e37" source="n37" target="n38"/>
	</graph>
</graphml>
