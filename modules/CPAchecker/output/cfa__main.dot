digraph main {
9 [shape="circle" label="N9\n23"]
28 [shape="circle" label="N28\n22"]
18 [shape="doublecircle" label="N18\n9"]
20 [shape="circle" label="N20\n5"]
21 [shape="circle" label="N21\n8"]
26 [shape="circle" label="N26\n7"]
8 [shape="circle" label="N8\n6"]
22 [shape="diamond" label="N22\n4"]
24 [shape="circle" label="N24\n3"]
23 [shape="circle" label="N23\n1"]
19 [shape="circle" label="N19\n0"]
25 [shape="circle" label="N25\n2"]
28 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">28</td><td align="left">void __VERIFIER_error();</td></tr><tr><td align="right">29</td><td align="left">void __VERIFIER_assert(int cond);</td></tr><tr><td align="right">30</td><td align="left">int __VERIFIER_nondet_int();</td></tr><tr><td align="right">31</td><td align="left">int main();</td></tr><tr><td align="right">32</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">10</td><td align="left">unsigned int SIZE = 1;</td></tr><tr><td align="right">11</td><td align="left">unsigned int j;</td></tr><tr><td align="right">12</td><td align="left">unsigned int k;</td></tr><tr><td align="right">13</td><td align="left">int array[SIZE];</td></tr><tr><td align="right">14</td><td align="left">int menor;</td></tr><tr><td align="right">15</td><td align="left">menor = __VERIFIER_nondet_int();</td></tr><tr><td align="right">16</td><td align="left">for</td></tr><tr><td align="right">17</td><td align="left">j = 0;</td></tr></table>>]
28 -> 18[label=""]
9 -> 28 [label="INIT GLOBAL VARS" fontname="Courier New"]
18 -> 20 [label="[j < SIZE]" fontname="Courier New"]
18 -> 21 [label="[!(j < SIZE)]" fontname="Courier New"]
100001 [shape="component" label="__VERIFIER_assert"]
21 -> 100001 [label="__VERIFIER_assert((array[0]) > menor);" fontname="Courier New"]
100001 -> 26 [label="" fontname="Courier New"]
21 -> 26 [label="__VERIFIER_assert((array[0]) > menor);" fontname="Courier New"]
26 -> 8 [label="return 0;" fontname="Courier New"]
22 -> 24 [label="[(array[j]) <= menor]" fontname="Courier New"]
22 -> 23 [label="[!((array[j]) <= menor)]" fontname="Courier New"]
23 -> 19 [label="" fontname="Courier New"]
24 -> 25 [label="menor = array[j];" fontname="Courier New"]
20 -> 22 [label="array[j] = __VERIFIER_nondet_int();" fontname="Courier New"]
19 -> 18 [label="j = j + 1;" fontname="Courier New"]
25 -> 23 [label="" fontname="Courier New"]
}