digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N9\nmain entry\nAbstractionState: ABS0: true\n ValueAnalysisState: []\n AutomatonState: WitnessAutomaton: n0\n" id="0"]
1 [label="1 @ N19\nmain\nValueAnalysisState: []\n AutomatonState: WitnessAutomaton: n0\n" id="1"]
2 [label="2 @ N20\nmain\nValueAnalysisState: []\n AutomatonState: WitnessAutomaton: n0\n" id="2"]
3 [label="3 @ N21\nmain\nValueAnalysisState: []\n AutomatonState: WitnessAutomaton: n0\n" id="3"]
4 [label="4 @ N22\nmain\nValueAnalysisState: []\n AutomatonState: WitnessAutomaton: n0\n" id="4"]
5 [label="5 @ N10\nmain\nValueAnalysisState: []\n AutomatonState: WitnessAutomaton: n0\n" id="5"]
6 [label="6 @ N11\nmain\nValueAnalysisState: []\n AutomatonState: WitnessAutomaton: n0\n" id="6"]
8 [fillcolor="cornflowerblue" label="8 @ N12\nmain\nAbstractionState: ABS1: true\n ValueAnalysisState: []\n AutomatonState: WitnessAutomaton: n0\n" id="8"]
10 [label="10 @ N14\nmain\nValueAnalysisState: []\n AutomatonState: WitnessAutomaton: n0\n" id="10"]
11 [label="11 @ N1\n__VERIFIER_assert entry\nValueAnalysisState: [__VERIFIER_assert::cond=NumericValue [number=0]]\n AutomatonState: WitnessAutomaton: n1\n" id="11"]
13 [label="13 @ N2\n__VERIFIER_assert\nValueAnalysisState: [__VERIFIER_assert::cond=NumericValue [number=0]]\n AutomatonState: WitnessAutomaton: n2\n" id="13"]
14 [label="14 @ N4\n__VERIFIER_assert\nValueAnalysisState: [__VERIFIER_assert::cond=NumericValue [number=0]]\n AutomatonState: WitnessAutomaton: n2\n" id="14"]
15 [label="15 @ N5\n__VERIFIER_assert\nValueAnalysisState: [__VERIFIER_assert::cond=NumericValue [number=0]]\n AutomatonState: WitnessAutomaton: n2\n" id="15"]
17 [fillcolor="red" label="17 @ N6\n__VERIFIER_assert\nAbstractionState: ABS2: true\n ValueAnalysisState: [__VERIFIER_assert::cond=NumericValue [number=0]]\n AutomatonState: WitnessAutomaton: _predefinedState_ERROR\n AutomatonState: SVCOMP: _predefinedState_ERROR\n" id="17"]
0 -> 1 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 1"]
1 -> 2 [color="red" label="Line 1: \lvoid __VERIFIER_error();\l" id="1 -> 2"]
2 -> 3 [color="red" label="Line 2: \lvoid __VERIFIER_assert(int cond);\l" id="2 -> 3"]
3 -> 4 [color="red" label="Line 8: \lint main();\l" id="3 -> 4"]
4 -> 5 [color="red" label="Line 0: \lFunction start dummy edge\l" id="4 -> 5"]
5 -> 6 [color="red" label="Line 9: \lunsigned int x;\l" id="5 -> 6"]
6 -> 8 [color="red" label="Line 10: \lwhile\l" id="6 -> 8"]
8 -> 9 [label="Line 10: \l[x < 268435455]\l" id="8 -> 9"]
8 -> 10 [color="red" label="Line 10: \l[!(x < 268435455)]\l" id="8 -> 10"]
10 -> 11 [color="red" label="Line 13: \l__VERIFIER_assert(x > 268435455)\l" id="10 -> 11"]
11 -> 12 [label="Line 0: \lFunction start dummy edge\l" id="11 -> 12"]
11 -> 13 [color="red" label="Line 0: \lFunction start dummy edge\l" id="11 -> 13"]
13 -> 14 [color="red" label="Line 3: \l[cond == 0]\l" id="13 -> 14"]
14 -> 15 [color="red" label="Line 4: \lLabel: ERROR\l" id="14 -> 15"]
15 -> 17 [color="red" label="Line 4: \l__VERIFIER_error();\l" id="15 -> 17"]
}
