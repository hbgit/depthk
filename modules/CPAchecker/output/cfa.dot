digraph CFA {
8 [shape="circle" label="N8\n23"]
27 [shape="circle" label="N27\n22"]
28 [shape="circle" label="N28\n21"]
29 [shape="circle" label="N29\n20"]
30 [shape="circle" label="N30\n19"]
31 [shape="circle" label="N31\n18"]
9 [shape="circle" label="N9\n17"]
10 [shape="circle" label="N10\n16"]
11 [shape="circle" label="N11\n15"]
12 [shape="circle" label="N12\n14"]
13 [shape="circle" label="N13\n13"]
14 [shape="circle" label="N14\n12"]
15 [shape="circle" label="N15\n11"]
16 [shape="circle" label="N16\n10"]
17 [shape="doublecircle" label="N17\n9"]
20 [shape="circle" label="N20\n8"]
1 [shape="circle" label="N1\n5"]
2 [shape="diamond" label="N2\n4"]
3 [shape="circle" label="N3\n1"]
0 [shape="circle" label="N0\n0"]
25 [shape="circle" label="N25\n7"]
7 [shape="circle" label="N7\n6"]
4 [shape="circle" label="N4\n3"]
5 [shape="circle" label="N5\n2"]
19 [shape="circle" label="N19\n5"]
21 [shape="diamond" label="N21\n4"]
22 [shape="circle" label="N22\n1"]
18 [shape="circle" label="N18\n0"]
23 [shape="circle" label="N23\n3"]
24 [shape="circle" label="N24\n2"]
node [shape="circle"]
subgraph cluster___VERIFIER_assert {
label="__VERIFIER_assert()"
1 -> 2 [label="Function start dummy edge"]
2 -> 4 [label="[cond == 0]"]
2 -> 3 [label="[!(cond == 0)]"]
3 -> 0 [label="return;"]
4 -> 5 [label="__VERIFIER_error();"]
5 -> 3 [label=""]}
subgraph cluster_main {
label="main()"
8 -> 27 [label="INIT GLOBAL VARS"]
27 -> 28 [label="void __VERIFIER_error();"]
28 -> 29 [label="void __VERIFIER_assert(int cond);"]
29 -> 30 [label="int __VERIFIER_nondet_int();"]
30 -> 31 [label="int main();"]
31 -> 9 [label="Function start dummy edge"]
9 -> 10 [label="unsigned int SIZE = 1;"]
10 -> 11 [label="unsigned int j;"]
11 -> 12 [label="unsigned int k;"]
12 -> 13 [label="int array[1];"]
13 -> 14 [label="int menor;"]
14 -> 15 [label="menor = __VERIFIER_nondet_int();"]
15 -> 16 [label="for"]
16 -> 17 [label="j = 0;"]
17 -> 19 [label="[j <= 0]"]
17 -> 20 [label="[!(j <= 0)]"]
20 -> 25 [label="__VERIFIER_assert((array[0]) > menor);" style="dotted" arrowhead="empty"]
20 -> 25 [label="__VERIFIER_assert((array[0]) > menor);"]
25 -> 7 [label="return 0;"]
19 -> 21 [label="array[0] = __VERIFIER_nondet_int();"]
21 -> 23 [label="[(array[0]) <= menor]"]
21 -> 22 [label="[!((array[0]) <= menor)]"]
22 -> 18 [label=""]
18 -> 17 [label="j = j + 1;"]
23 -> 24 [label="menor = array[0];"]
24 -> 22 [label=""]}
20 -> 1 [label="__VERIFIER_assert((array[0]) > menor)"]
0 -> 25 [label="Return edge from __VERIFIER_assert to main: __VERIFIER_assert((array[0]) > menor);"]}