digraph CFA {
9 [shape="circle" label="N9\n23"]
28 [shape="circle" label="N28\n22"]
29 [shape="circle" label="N29\n21"]
30 [shape="circle" label="N30\n20"]
31 [shape="circle" label="N31\n19"]
32 [shape="circle" label="N32\n18"]
10 [shape="circle" label="N10\n17"]
11 [shape="circle" label="N11\n16"]
12 [shape="circle" label="N12\n15"]
13 [shape="circle" label="N13\n14"]
14 [shape="circle" label="N14\n13"]
15 [shape="circle" label="N15\n12"]
16 [shape="circle" label="N16\n11"]
17 [shape="circle" label="N17\n10"]
18 [shape="doublecircle" label="N18\n9"]
21 [shape="circle" label="N21\n8"]
1 [shape="circle" label="N1\n6"]
2 [shape="diamond" label="N2\n5"]
3 [shape="circle" label="N3\n1"]
0 [shape="circle" label="N0\n0"]
26 [shape="circle" label="N26\n7"]
8 [shape="circle" label="N8\n6"]
4 [shape="circle" label="N4\n4"]
5 [shape="circle" label="N5\n3"]
6 [shape="circle" label="N6\n2"]
20 [shape="circle" label="N20\n5"]
22 [shape="diamond" label="N22\n4"]
23 [shape="circle" label="N23\n1"]
19 [shape="circle" label="N19\n0"]
24 [shape="circle" label="N24\n3"]
25 [shape="circle" label="N25\n2"]
node [shape="circle"]
subgraph cluster___VERIFIER_assert {
label="__VERIFIER_assert()"
1 -> 2 [label="Function start dummy edge"]
2 -> 4 [label="[cond == 0]"]
2 -> 3 [label="[!(cond == 0)]"]
3 -> 0 [label="return;"]
4 -> 5 [label="Label: ERROR"]
5 -> 6 [label="__VERIFIER_error();"]
6 -> 3 [label=""]}
subgraph cluster_main {
label="main()"
9 -> 28 [label="INIT GLOBAL VARS"]
28 -> 29 [label="void __VERIFIER_error();"]
29 -> 30 [label="void __VERIFIER_assert(int cond);"]
30 -> 31 [label="int __VERIFIER_nondet_int();"]
31 -> 32 [label="int main();"]
32 -> 10 [label="Function start dummy edge"]
10 -> 11 [label="unsigned int SIZE = 1;"]
11 -> 12 [label="unsigned int j;"]
12 -> 13 [label="unsigned int k;"]
13 -> 14 [label="int array[SIZE];"]
14 -> 15 [label="int menor;"]
15 -> 16 [label="menor = __VERIFIER_nondet_int();"]
16 -> 17 [label="for"]
17 -> 18 [label="j = 0;"]
18 -> 20 [label="[j < SIZE]"]
18 -> 21 [label="[!(j < SIZE)]"]
21 -> 26 [label="__VERIFIER_assert((array[0]) > menor);" style="dotted" arrowhead="empty"]
21 -> 26 [label="__VERIFIER_assert((array[0]) > menor);"]
26 -> 8 [label="return 0;"]
20 -> 22 [label="array[j] = __VERIFIER_nondet_int();"]
22 -> 24 [label="[(array[j]) <= menor]"]
22 -> 23 [label="[!((array[j]) <= menor)]"]
23 -> 19 [label=""]
19 -> 18 [label="j = j + 1;"]
24 -> 25 [label="menor = array[j];"]
25 -> 23 [label=""]}
21 -> 1 [label="__VERIFIER_assert((array[0]) > menor)"]
0 -> 26 [label="Return edge from __VERIFIER_assert to main: __VERIFIER_assert((array[0]) > menor);"]}