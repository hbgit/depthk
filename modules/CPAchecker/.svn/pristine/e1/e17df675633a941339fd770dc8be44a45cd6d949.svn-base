/* Generated by CIL v. 1.3.7 */
/* print_CIL_Input is true */

#line 211 "/usr/lib/gcc/x86_64-linux-gnu/4.4.3/include/stddef.h"
typedef unsigned long size_t;
#line 31 "/usr/include/bits/types.h"
typedef unsigned char __u_char;
#line 33 "/usr/include/bits/types.h"
typedef unsigned int __u_int;
#line 34 "/usr/include/bits/types.h"
typedef unsigned long __u_long;
#line 143 "/usr/include/bits/types.h"
typedef int __pid_t;
#line 149 "/usr/include/bits/types.h"
typedef long __time_t;
#line 35 "/usr/include/sys/types.h"
typedef __u_char u_char;
#line 37 "/usr/include/sys/types.h"
typedef __u_int u_int;
#line 38 "/usr/include/sys/types.h"
typedef __u_long u_long;
#line 100 "/usr/include/sys/types.h"
typedef __pid_t pid_t;
#line 76 "/usr/include/time.h"
typedef __time_t time_t;
#line 201 "/usr/include/sys/types.h"
typedef unsigned char u_int8_t;
#line 202 "/usr/include/sys/types.h"
typedef unsigned short u_int16_t;
#line 203 "/usr/include/sys/types.h"
typedef unsigned int u_int32_t;
#line 52 "/usr/include/stdint.h"
typedef unsigned int uint32_t;
#line 141 "/usr/include/netinet/in.h"
typedef uint32_t in_addr_t;
#line 142 "/usr/include/netinet/in.h"
struct in_addr {
   in_addr_t s_addr ;
};
#line 48 "/usr/include/arpa/nameser_compat.h"
struct __anonstruct_HEADER_25 {
   unsigned int id : 16 ;
   unsigned int rd : 1 ;
   unsigned int tc : 1 ;
   unsigned int aa : 1 ;
   unsigned int opcode : 4 ;
   unsigned int qr : 1 ;
   unsigned int rcode : 4 ;
   unsigned int cd : 1 ;
   unsigned int ad : 1 ;
   unsigned int unused : 1 ;
   unsigned int ra : 1 ;
   unsigned int qdcount : 16 ;
   unsigned int ancount : 16 ;
   unsigned int nscount : 16 ;
   unsigned int arcount : 16 ;
};
#line 48 "/usr/include/arpa/nameser_compat.h"
typedef struct __anonstruct_HEADER_25 HEADER;
#line 165 "ns_defs.h"
enum severity {
    ignore = 0,
    warn = 1,
    fail = 2,
    not_set = 3
} ;
#line 173 "ns_defs.h"
struct zoneinfo {
   char *z_origin ;
   time_t z_time ;
   time_t z_lastupdate ;
   u_int32_t z_refresh ;
   u_int32_t z_retry ;
   u_int32_t z_expire ;
   u_int32_t z_minimum ;
   u_int32_t z_serial ;
   char *z_source ;
   time_t z_ftime ;
   struct in_addr z_axfr_src ;
   struct in_addr z_xaddr ;
   struct in_addr z_addr[16] ;
   u_char z_addrcnt ;
   u_char z_type ;
   u_int32_t z_flags ;
   pid_t z_xferpid ;
   u_int z_options ;
   u_int z_optset ;
   int z_class ;
   int z_numxfrs ;
   enum severity z_checknames ;
   struct in_addr *z_also_notify ;
   int z_notify_count ;
   char *z_ixfr_base ;
   char *z_ixfr_tmp ;
   int z_maintain_ixfr_base ;
   int z_log_size_ixfr ;
   int z_max_log_size_ixfr ;
};
#line 303
enum transport {
    primary_trans = 0,
    secondary_trans = 1,
    response_trans = 2,
    update_trans = 3,
    num_trans = 4
} ;
#line 312
enum context {
    domain_ctx = 0,
    owner_ctx = 1,
    mailname_ctx = 2,
    hostname_ctx = 3
} ;
#line 339 "/usr/include/stdio.h"
extern int printf(char const   * __restrict  __format  , ...) ;
#line 43 "/usr/include/string.h"
extern  __attribute__((__nothrow__)) void *memcpy(void * __restrict  __dest , void const   * __restrict  __src ,
                                                  size_t __n )  __attribute__((__nonnull__(1,2))) ;
#line 127
extern  __attribute__((__nothrow__)) char *strcpy(char * __restrict  __dest , char const   * __restrict  __src )  __attribute__((__nonnull__(1,2))) ;
#line 397
extern  __attribute__((__nothrow__)) size_t strlen(char const   *__s )  __attribute__((__pure__,
__nonnull__(1))) ;
#line 411
extern  __attribute__((__nothrow__)) char *strerror(int __errnum ) ;
#line 43 "/usr/include/bits/errno.h"
extern  __attribute__((__nothrow__)) int *__errno_location(void)  __attribute__((__const__)) ;
#line 271 "/usr/include/resolv.h"
extern  __attribute__((__nothrow__)) int __res_init(void) ;
#line 326
 __attribute__((__nothrow__)) int __res_hnok(char const   *dn ) ;
#line 329
 __attribute__((__nothrow__)) int __res_dnok(char const   *dn ) ;
#line 351
extern  __attribute__((__nothrow__)) char *__p_secstodate(u_long  ) ;
#line 353
extern  __attribute__((__nothrow__)) int __dn_comp(char const   * , u_char * , int  ,
                                                   u_char ** , u_char ** ) ;
#line 355
extern  __attribute__((__nothrow__)) int __dn_expand(u_char const   * , u_char const   * ,
                                                     u_char const   * , char * , int  ) ;
#line 471 "/usr/include/stdlib.h"
extern  __attribute__((__nothrow__)) void *malloc(size_t __size )  __attribute__((__malloc__)) ;
#line 186 "/usr/include/time.h"
extern  __attribute__((__nothrow__)) time_t time(time_t *__timer ) ;
#line 71 "/usr/include/assert.h"
extern  __attribute__((__nothrow__, __noreturn__)) void __assert_fail(char const   *__assertion ,
                                                                      char const   *__file ,
                                                                      unsigned int __line ,
                                                                      char const   *__function ) ;
#line 104 "sig-ok.c"
char const   *transport_strings[4]  = {      "primary",      "secondary",      "response",      (char const   *)((void *)0)};
#line 138
 __attribute__((__nothrow__)) int __res_dnok(char const   *dn ) ;
#line 138 "sig-ok.c"
int __res_dnok(char const   *dn ) 
{ int ch ;
  char const   *tmp ;
  char __cil_tmp4 ;

  {
  {
#line 142
  while (1) {
    while_continue: /* CIL Label */ ;
#line 142
    tmp = dn;
#line 142
    dn = dn + 1;
#line 142
    __cil_tmp4 = *tmp;
#line 142
    ch = (int )__cil_tmp4;
#line 142
    if (ch != 0) {

    } else {
#line 142
      goto while_break;
    }
#line 143
    if (ch > 32) {
#line 143
      if (ch < 127) {

      } else {
#line 144
        return (0);
      }
    } else {
#line 144
      return (0);
    }
  }
  while_break: /* CIL Label */ ;
  }
#line 145
  return (1);
}
}
#line 148
 __attribute__((__nothrow__)) int __res_hnok(char const   *dn ) ;
#line 148 "sig-ok.c"
int __res_hnok(char const   *dn ) 
{ int ppch ;
  int pch ;
  int ch ;
  char const   *tmp ;
  int nch ;
  char const   *tmp___0 ;
  char __cil_tmp8 ;
  char __cil_tmp9 ;

  {
#line 150
  ppch = '\000';
#line 150
  pch = 46;
#line 150
  tmp = dn;
#line 150
  dn = dn + 1;
#line 150
  __cil_tmp8 = *tmp;
#line 150
  ch = (int )__cil_tmp8;
  {
#line 152
  while (1) {
    while_continue: /* CIL Label */ ;
#line 152
    if (ch != 0) {

    } else {
#line 152
      goto while_break;
    }
#line 153
    tmp___0 = dn;
#line 153
    dn = dn + 1;
#line 153
    __cil_tmp9 = *tmp___0;
#line 153
    nch = (int )__cil_tmp9;
#line 155
    if (ch == 46) {

    } else
#line 157
    if (pch == 46) {
#line 158
      if (ch >= 65) {
#line 158
        if (ch <= 90) {

        } else {
#line 158
          goto _L___0;
        }
      } else
      _L___0: /* CIL Label */ 
#line 158
      if (ch >= 97) {
#line 158
        if (ch <= 122) {

        } else {
#line 158
          goto _L;
        }
      } else
      _L: /* CIL Label */ 
#line 158
      if (ch >= 48) {
#line 158
        if (ch <= 57) {

        } else {
#line 159
          return (0);
        }
      } else {
#line 159
        return (0);
      }
    } else
#line 160
    if (nch == 46) {
#line 160
      goto _L___6;
    } else
#line 160
    if (nch == 0) {
      _L___6: /* CIL Label */ 
#line 161
      if (ch >= 65) {
#line 161
        if (ch <= 90) {

        } else {
#line 161
          goto _L___2;
        }
      } else
      _L___2: /* CIL Label */ 
#line 161
      if (ch >= 97) {
#line 161
        if (ch <= 122) {

        } else {
#line 161
          goto _L___1;
        }
      } else
      _L___1: /* CIL Label */ 
#line 161
      if (ch >= 48) {
#line 161
        if (ch <= 57) {

        } else {
#line 162
          return (0);
        }
      } else {
#line 162
        return (0);
      }
    } else
#line 164
    if (ch >= 65) {
#line 164
      if (ch <= 90) {

      } else {
#line 164
        goto _L___5;
      }
    } else
    _L___5: /* CIL Label */ 
#line 164
    if (ch >= 97) {
#line 164
      if (ch <= 122) {

      } else {
#line 164
        goto _L___4;
      }
    } else
    _L___4: /* CIL Label */ 
#line 164
    if (ch >= 48) {
#line 164
      if (ch <= 57) {

      } else {
#line 164
        goto _L___3;
      }
    } else
    _L___3: /* CIL Label */ 
#line 164
    if (ch == 45) {

    } else {
#line 165
      return (0);
    }
#line 167
    ppch = pch;
#line 167
    pch = ch;
#line 167
    ch = nch;
  }
  while_break: /* CIL Label */ ;
  }
#line 169
  return (1);
}
}
#line 173 "sig-ok.c"
enum context ns_ownercontext(int type , enum transport transport ) 
{ enum context context ;
  char const   * __restrict  __cil_tmp4 ;

  {
#line 178
  context = (enum context )0;
  {
#line 181
  if (type == 1) {
#line 181
    goto case_1;
  } else {

  }
#line 182
  if (type == 11) {
#line 182
    goto case_1;
  } else {

  }
#line 183
  if (type == 15) {
#line 183
    goto case_1;
  } else {

  }
#line 198
  if (type == 7) {
#line 198
    goto case_7;
  } else {

  }
#line 199
  if (type == 8) {
#line 199
    goto case_7;
  } else {

  }
#line 202
  goto switch_default___0;
  case_1: /* CIL Label */ 
  case_11: /* CIL Label */ 
  case_15: /* CIL Label */ 
  {
#line 185
  if ((int )transport == 3) {
#line 185
    goto case_3;
  } else {

  }
#line 186
  if ((int )transport == 0) {
#line 186
    goto case_3;
  } else {

  }
#line 187
  if ((int )transport == 1) {
#line 187
    goto case_3;
  } else {

  }
#line 190
  if ((int )transport == 2) {
#line 190
    goto case_2;
  } else {

  }
#line 193
  goto switch_default;
  case_3: /* CIL Label */ 
  case_0: /* CIL Label */ 
  case_1___0: /* CIL Label */ 
#line 188
  context = (enum context )1;
#line 189
  goto switch_break___0;
  case_2: /* CIL Label */ 
#line 191
  context = (enum context )3;
#line 192
  goto switch_break___0;
  switch_default: /* CIL Label */ 
  {
#line 194
  __cil_tmp4 = (char const   * __restrict  )"impossible condition in ns_ownercontext()";
#line 194
  printf(__cil_tmp4);
  }
  switch_break___0: /* CIL Label */ ;
  }
#line 197
  goto switch_break;
  case_7: /* CIL Label */ 
  case_8: /* CIL Label */ 
#line 200
  context = (enum context )2;
#line 201
  goto switch_break;
  switch_default___0: /* CIL Label */ 
#line 204
  goto switch_break;
  switch_break: /* CIL Label */ ;
  }
#line 206
  return (context);
}
}
#line 217 "sig-ok.c"
char *newstr(size_t len , int needpanic ) 
{ u_char *buf ;
  u_char *bp ;
  void *tmp ;
  int *tmp___0 ;
  char *tmp___1 ;
  register u_int16_t t_s ;
  register u_char *t_cp ;
  u_char *tmp___2 ;
  size_t __cil_tmp11 ;
  size_t __cil_tmp12 ;
  void *__cil_tmp13 ;
  unsigned long __cil_tmp14 ;
  unsigned long __cil_tmp15 ;
  int __cil_tmp16 ;
  char const   * __restrict  __cil_tmp17 ;
  void *__cil_tmp18 ;
  int __cil_tmp19 ;
  int __cil_tmp20 ;

  {
#line 221
  if (len <= 65536UL) {

  } else {
    {
#line 221
    __assert_fail("len <= 65536", "sig-ok.c", 221U, "newstr");
    }
  }
  {
#line 223
  __cil_tmp11 = 2UL + len;
#line 223
  __cil_tmp12 = __cil_tmp11 + 1UL;
#line 223
  tmp = malloc(__cil_tmp12);
#line 223
  buf = (u_char *)tmp;
  }
  {
#line 224
  __cil_tmp13 = (void *)0;
#line 224
  __cil_tmp14 = (unsigned long )__cil_tmp13;
#line 224
  __cil_tmp15 = (unsigned long )buf;
#line 224
  if (__cil_tmp15 == __cil_tmp14) {
#line 225
    if (needpanic) {
      {
#line 226
      tmp___0 = __errno_location();
#line 226
      __cil_tmp16 = *tmp___0;
#line 226
      tmp___1 = strerror(__cil_tmp16);
#line 226
      __cil_tmp17 = (char const   * __restrict  )"savestr: malloc failed (%s)";
#line 226
      printf(__cil_tmp17, tmp___1);
      }
    } else {
      {
#line 228
      __cil_tmp18 = (void *)0;
#line 228
      return ((char *)__cil_tmp18);
      }
    }
  } else {

  }
  }
#line 230
  bp = buf;
  {
#line 231
  while (1) {
    while_continue: /* CIL Label */ ;
#line 231
    t_s = (u_int16_t )len;
#line 231
    t_cp = bp;
#line 231
    tmp___2 = t_cp;
#line 231
    t_cp = t_cp + 1;
#line 231
    __cil_tmp19 = (int )t_s;
#line 231
    __cil_tmp20 = __cil_tmp19 >> 8;
#line 231
    *tmp___2 = (u_char )__cil_tmp20;
#line 231
    *t_cp = (u_char )t_s;
#line 231
    bp = bp + 2;
#line 231
    goto while_break;
  }
  while_break: /* CIL Label */ ;
  }
#line 232
  return ((char *)bp);
}
}
#line 238 "sig-ok.c"
int ns_nameok(char const   *name , int class , struct zoneinfo *zp , enum transport transport ,
              enum context context , char const   *owner ) 
{ enum severity severity ;
  int ok ;
  int tmp ;
  int tmp___0 ;
  void *__cil_tmp11 ;
  unsigned long __cil_tmp12 ;
  unsigned long __cil_tmp13 ;
  unsigned long __cil_tmp14 ;
  unsigned long __cil_tmp15 ;
  unsigned int __cil_tmp16 ;
  char const   * __restrict  __cil_tmp17 ;
  int __cil_tmp18 ;

  {
#line 245
  severity = (enum severity )3;
#line 246
  ok = 1;
  {
#line 248
  __cil_tmp11 = (void *)0;
#line 248
  __cil_tmp12 = (unsigned long )__cil_tmp11;
#line 248
  __cil_tmp13 = (unsigned long )zp;
#line 248
  if (__cil_tmp13 != __cil_tmp12) {
#line 249
    __cil_tmp14 = (unsigned long )zp;
#line 249
    __cil_tmp15 = __cil_tmp14 + 164;
#line 249
    severity = *((enum severity *)__cil_tmp15);
  } else {

  }
  }
  {
#line 259
  __cil_tmp16 = (unsigned int )severity;
#line 259
  if (__cil_tmp16 == 0U) {
#line 260
    return (1);
  } else {

  }
  }
  {
#line 262
  if ((int )context == 0) {
#line 262
    goto case_0;
  } else {

  }
#line 265
  if ((int )context == 3) {
#line 265
    goto case_3;
  } else {

  }
#line 268
  goto switch_default;
  case_0: /* CIL Label */ 
#line 263
  if (class != 1) {
#line 263
    tmp___0 = 1;
  } else {
    {
#line 263
    tmp = __res_dnok(name);
    }
#line 263
    if (tmp) {
#line 263
      tmp___0 = 1;
    } else {
#line 263
      tmp___0 = 0;
    }
  }
#line 263
  ok = tmp___0;
#line 264
  goto switch_break;
  case_3: /* CIL Label */ 
  {
#line 266
  ok = __res_hnok(name);
  }
#line 267
  goto switch_break;
  switch_default: /* CIL Label */ 
  {
#line 270
  __cil_tmp17 = (char const   * __restrict  )"unexpected context %d in ns_nameok";
#line 270
  __cil_tmp18 = (int )context;
#line 270
  printf(__cil_tmp17, __cil_tmp18);
  }
#line 271
  return (0);
#line 274
  return (ok);
  switch_break: /* CIL Label */ ;
  }
#line 277
  return (ok);
}
}
#line 281 "sig-ok.c"
static int rrextract(u_char *msg , int msglen , u_char *rrp , u_char *dname , int namelen ) 
{ u_char *eom ;
  u_char *cp ;
  u_char *cp1 ;
  u_char *rdatap ;
  u_int class ;
  u_int type ;
  u_int dlen ;
  int n ;
  int len ;
  u_int32_t ttl ;
  u_char data[4140] ;
  HEADER *hp ;
  register u_char const   *t_cp ;
  register u_char const   *t_cp___0 ;
  register u_char const   *t_cp___1 ;
  register u_char const   *t_cp___2 ;
  enum context tmp ;
  int tmp___0 ;
  u_long origTTL ;
  u_long exptime ;
  u_long signtime ;
  u_long timetilexp ;
  u_long now ;
  u_int8_t alg ;
  u_int temp ;
  register u_char const   *t_cp___3 ;
  register u_char const   *t_cp___4 ;
  register u_char const   *t_cp___5 ;
  register u_char const   *t_cp___6 ;
  register u_char const   *t_cp___7 ;
  register u_char const   *t_cp___8 ;
  time_t tmp___1 ;
  char *tmp___2 ;
  char *tmp___3 ;
  size_t tmp___4 ;
  char const   * __restrict  __cil_tmp41 ;
  char const   * __restrict  __cil_tmp42 ;
  char *__cil_tmp43 ;
  char *__cil_tmp44 ;
  u_char const   *__cil_tmp45 ;
  u_char const   *__cil_tmp46 ;
  u_char const   *__cil_tmp47 ;
  char *__cil_tmp48 ;
  char const   * __restrict  __cil_tmp49 ;
  unsigned long __cil_tmp50 ;
  unsigned long __cil_tmp51 ;
  char const   * __restrict  __cil_tmp52 ;
  unsigned long __cil_tmp53 ;
  unsigned long __cil_tmp54 ;
  unsigned long __cil_tmp55 ;
  u_char *__cil_tmp56 ;
  unsigned long __cil_tmp57 ;
  unsigned long __cil_tmp58 ;
  unsigned long __cil_tmp59 ;
  u_char const   *__cil_tmp60 ;
  u_char __cil_tmp61 ;
  u_int16_t __cil_tmp62 ;
  int __cil_tmp63 ;
  u_char const   *__cil_tmp64 ;
  u_char __cil_tmp65 ;
  u_int16_t __cil_tmp66 ;
  int __cil_tmp67 ;
  int __cil_tmp68 ;
  int __cil_tmp69 ;
  char const   * __restrict  __cil_tmp70 ;
  u_char const   *__cil_tmp71 ;
  u_char __cil_tmp72 ;
  u_int16_t __cil_tmp73 ;
  int __cil_tmp74 ;
  u_char const   *__cil_tmp75 ;
  u_char __cil_tmp76 ;
  u_int16_t __cil_tmp77 ;
  int __cil_tmp78 ;
  int __cil_tmp79 ;
  int __cil_tmp80 ;
  char const   * __restrict  __cil_tmp81 ;
  int __cil_tmp82 ;
  int __cil_tmp83 ;
  int __cil_tmp84 ;
  int __cil_tmp85 ;
  u_int __cil_tmp86 ;
  char const   * __restrict  __cil_tmp87 ;
  unsigned long __cil_tmp88 ;
  unsigned long __cil_tmp89 ;
  u_char const   *__cil_tmp90 ;
  u_char __cil_tmp91 ;
  u_int32_t __cil_tmp92 ;
  u_char const   *__cil_tmp93 ;
  u_char __cil_tmp94 ;
  u_int32_t __cil_tmp95 ;
  u_int32_t __cil_tmp96 ;
  u_char const   *__cil_tmp97 ;
  u_char __cil_tmp98 ;
  u_int32_t __cil_tmp99 ;
  u_int32_t __cil_tmp100 ;
  u_char const   *__cil_tmp101 ;
  u_char __cil_tmp102 ;
  u_int32_t __cil_tmp103 ;
  u_int32_t __cil_tmp104 ;
  unsigned int __cil_tmp105 ;
  unsigned int __cil_tmp106 ;
  char const   * __restrict  __cil_tmp107 ;
  char const   * __restrict  __cil_tmp108 ;
  u_char const   *__cil_tmp109 ;
  u_char __cil_tmp110 ;
  u_int16_t __cil_tmp111 ;
  int __cil_tmp112 ;
  u_char const   *__cil_tmp113 ;
  u_char __cil_tmp114 ;
  u_int16_t __cil_tmp115 ;
  int __cil_tmp116 ;
  int __cil_tmp117 ;
  int __cil_tmp118 ;
  char const   * __restrict  __cil_tmp119 ;
  unsigned long __cil_tmp120 ;
  u_char *__cil_tmp121 ;
  unsigned long __cil_tmp122 ;
  unsigned long __cil_tmp123 ;
  unsigned long __cil_tmp124 ;
  char const   * __restrict  __cil_tmp125 ;
  int __cil_tmp126 ;
  enum transport __cil_tmp127 ;
  char *__cil_tmp128 ;
  char const   *__cil_tmp129 ;
  int __cil_tmp130 ;
  void *__cil_tmp131 ;
  struct zoneinfo *__cil_tmp132 ;
  enum transport __cil_tmp133 ;
  char *__cil_tmp134 ;
  char const   *__cil_tmp135 ;
  unsigned long __cil_tmp136 ;
  unsigned long __cil_tmp137 ;
  char const   * __restrict  __cil_tmp138 ;
  unsigned long __cil_tmp139 ;
  unsigned long __cil_tmp140 ;
  char const   * __restrict  __cil_tmp141 ;
  char const   * __restrict  __cil_tmp142 ;
  char const   * __restrict  __cil_tmp143 ;
  unsigned long __cil_tmp144 ;
  u_char *__cil_tmp145 ;
  unsigned long __cil_tmp146 ;
  unsigned long __cil_tmp147 ;
  unsigned long __cil_tmp148 ;
  u_char const   *__cil_tmp149 ;
  u_char __cil_tmp150 ;
  u_int16_t __cil_tmp151 ;
  int __cil_tmp152 ;
  u_char const   *__cil_tmp153 ;
  u_char __cil_tmp154 ;
  u_int16_t __cil_tmp155 ;
  int __cil_tmp156 ;
  int __cil_tmp157 ;
  int __cil_tmp158 ;
  char const   * __restrict  __cil_tmp159 ;
  u_char const   *__cil_tmp160 ;
  u_char __cil_tmp161 ;
  u_int16_t __cil_tmp162 ;
  int __cil_tmp163 ;
  u_char const   *__cil_tmp164 ;
  u_char __cil_tmp165 ;
  u_int16_t __cil_tmp166 ;
  int __cil_tmp167 ;
  int __cil_tmp168 ;
  int __cil_tmp169 ;
  char const   * __restrict  __cil_tmp170 ;
  u_int __cil_tmp171 ;
  char const   * __restrict  __cil_tmp172 ;
  int __cil_tmp173 ;
  u_char const   *__cil_tmp174 ;
  u_char __cil_tmp175 ;
  u_int32_t __cil_tmp176 ;
  u_char const   *__cil_tmp177 ;
  u_char __cil_tmp178 ;
  u_int32_t __cil_tmp179 ;
  u_int32_t __cil_tmp180 ;
  u_char const   *__cil_tmp181 ;
  u_char __cil_tmp182 ;
  u_int32_t __cil_tmp183 ;
  u_int32_t __cil_tmp184 ;
  u_char const   *__cil_tmp185 ;
  u_char __cil_tmp186 ;
  u_int32_t __cil_tmp187 ;
  u_int32_t __cil_tmp188 ;
  unsigned int __cil_tmp189 ;
  unsigned int __cil_tmp190 ;
  unsigned int __cil_tmp191 ;
  char const   * __restrict  __cil_tmp192 ;
  int __cil_tmp193 ;
  u_char const   *__cil_tmp194 ;
  u_char __cil_tmp195 ;
  u_int32_t __cil_tmp196 ;
  u_char const   *__cil_tmp197 ;
  u_char __cil_tmp198 ;
  u_int32_t __cil_tmp199 ;
  u_int32_t __cil_tmp200 ;
  u_char const   *__cil_tmp201 ;
  u_char __cil_tmp202 ;
  u_int32_t __cil_tmp203 ;
  u_int32_t __cil_tmp204 ;
  u_char const   *__cil_tmp205 ;
  u_char __cil_tmp206 ;
  u_int32_t __cil_tmp207 ;
  u_int32_t __cil_tmp208 ;
  unsigned int __cil_tmp209 ;
  unsigned int __cil_tmp210 ;
  unsigned int __cil_tmp211 ;
  char const   * __restrict  __cil_tmp212 ;
  int __cil_tmp213 ;
  u_char const   *__cil_tmp214 ;
  u_char __cil_tmp215 ;
  u_int32_t __cil_tmp216 ;
  u_char const   *__cil_tmp217 ;
  u_char __cil_tmp218 ;
  u_int32_t __cil_tmp219 ;
  u_int32_t __cil_tmp220 ;
  u_char const   *__cil_tmp221 ;
  u_char __cil_tmp222 ;
  u_int32_t __cil_tmp223 ;
  u_int32_t __cil_tmp224 ;
  u_char const   *__cil_tmp225 ;
  u_char __cil_tmp226 ;
  u_int32_t __cil_tmp227 ;
  u_int32_t __cil_tmp228 ;
  unsigned int __cil_tmp229 ;
  unsigned int __cil_tmp230 ;
  unsigned int __cil_tmp231 ;
  char const   * __restrict  __cil_tmp232 ;
  int __cil_tmp233 ;
  u_char const   *__cil_tmp234 ;
  u_char __cil_tmp235 ;
  u_int16_t __cil_tmp236 ;
  int __cil_tmp237 ;
  u_char const   *__cil_tmp238 ;
  u_char __cil_tmp239 ;
  u_int16_t __cil_tmp240 ;
  int __cil_tmp241 ;
  int __cil_tmp242 ;
  int __cil_tmp243 ;
  char const   * __restrict  __cil_tmp244 ;
  void *__cil_tmp245 ;
  time_t *__cil_tmp246 ;
  char const   * __restrict  __cil_tmp247 ;
  int __cil_tmp248 ;
  u_long __cil_tmp249 ;
  char const   * __restrict  __cil_tmp250 ;
  char const   * __restrict  __cil_tmp251 ;
  int __cil_tmp252 ;
  u_int __cil_tmp253 ;
  u_int __cil_tmp254 ;
  char const   * __restrict  __cil_tmp255 ;
  int __cil_tmp256 ;
  u_int __cil_tmp257 ;
  u_int __cil_tmp258 ;
  u_long __cil_tmp259 ;
  char const   * __restrict  __cil_tmp260 ;
  unsigned long __cil_tmp261 ;
  unsigned long __cil_tmp262 ;
  unsigned long __cil_tmp263 ;
  u_char *__cil_tmp264 ;
  unsigned long __cil_tmp265 ;
  unsigned long __cil_tmp266 ;
  unsigned long __cil_tmp267 ;
  void * __restrict  __cil_tmp268 ;
  void const   * __restrict  __cil_tmp269 ;
  size_t __cil_tmp270 ;
  char const   * __restrict  __cil_tmp271 ;
  char const   * __restrict  __cil_tmp272 ;
  char *__cil_tmp273 ;
  char *__cil_tmp274 ;
  u_char const   *__cil_tmp275 ;
  u_char const   *__cil_tmp276 ;
  u_char *__cil_tmp277 ;
  u_char const   *__cil_tmp278 ;
  char *__cil_tmp279 ;
  unsigned long __cil_tmp280 ;
  int __cil_tmp281 ;
  char const   * __restrict  __cil_tmp282 ;
  char *__cil_tmp283 ;
  char const   * __restrict  __cil_tmp284 ;
  int __cil_tmp285 ;
  char const   * __restrict  __cil_tmp286 ;
  unsigned long __cil_tmp287 ;
  unsigned long __cil_tmp288 ;
  int __cil_tmp289 ;
  u_int __cil_tmp290 ;
  char const   * __restrict  __cil_tmp291 ;
  int __cil_tmp292 ;
  char const   * __restrict  __cil_tmp293 ;
  unsigned long __cil_tmp294 ;
  unsigned long __cil_tmp295 ;
  char *__cil_tmp296 ;
  char const   *__cil_tmp297 ;
  size_t __cil_tmp298 ;
  int __cil_tmp299 ;
  u_int __cil_tmp300 ;
  u_int __cil_tmp301 ;
  char const   * __restrict  __cil_tmp302 ;
  unsigned long __cil_tmp303 ;
  unsigned long __cil_tmp304 ;
  u_char *__cil_tmp305 ;
  int __cil_tmp306 ;
  unsigned long __cil_tmp307 ;
  unsigned long __cil_tmp308 ;
  unsigned long __cil_tmp309 ;
  unsigned long __cil_tmp310 ;
  unsigned long __cil_tmp311 ;
  unsigned long __cil_tmp312 ;
  unsigned long __cil_tmp313 ;
  unsigned long __cil_tmp314 ;
  unsigned long __cil_tmp315 ;
  unsigned long __cil_tmp316 ;
  unsigned long __cil_tmp317 ;
  char const   * __restrict  __cil_tmp318 ;
  unsigned long __cil_tmp319 ;
  unsigned long __cil_tmp320 ;
  unsigned int __cil_tmp321 ;
  char const   * __restrict  __cil_tmp322 ;
  void * __restrict  __cil_tmp323 ;
  void const   * __restrict  __cil_tmp324 ;
  size_t __cil_tmp325 ;
  unsigned long __cil_tmp326 ;
  unsigned long __cil_tmp327 ;
  u_char *__cil_tmp328 ;
  unsigned long __cil_tmp329 ;
  unsigned long __cil_tmp330 ;
  char const   * __restrict  __cil_tmp331 ;
  int __cil_tmp332 ;
  u_int __cil_tmp333 ;
  u_int __cil_tmp334 ;
  unsigned long __cil_tmp335 ;
  unsigned long __cil_tmp336 ;
  unsigned long __cil_tmp337 ;
  unsigned long __cil_tmp338 ;
  int __cil_tmp339 ;
  u_int __cil_tmp340 ;
  char const   * __restrict  __cil_tmp341 ;
  int __cil_tmp342 ;
  u_int __cil_tmp343 ;
  unsigned long __cil_tmp344 ;
  unsigned long __cil_tmp345 ;
  char const   * __restrict  __cil_tmp346 ;
  unsigned long __cil_tmp347 ;
  unsigned long __cil_tmp348 ;

  {
  {
#line 286
  len = 0;
#line 289
  hp = (HEADER *)msg;
#line 291
  cp = rrp;
#line 292
  eom = msg + msglen;
#line 294
  __cil_tmp41 = (char const   * __restrict  )"Trying to do dn_expand..\n";
#line 294
  printf(__cil_tmp41);
#line 295
  __cil_tmp42 = (char const   * __restrict  )"msg = %s, msglen = %d, rrp = %s, namelen = %d\n";
#line 295
  __cil_tmp43 = (char *)msg;
#line 295
  __cil_tmp44 = (char *)rrp;
#line 295
  printf(__cil_tmp42, __cil_tmp43, msglen, __cil_tmp44, namelen);
#line 297
  __cil_tmp45 = (u_char const   *)msg;
#line 297
  __cil_tmp46 = (u_char const   *)eom;
#line 297
  __cil_tmp47 = (u_char const   *)cp;
#line 297
  __cil_tmp48 = (char *)dname;
#line 297
  n = __dn_expand(__cil_tmp45, __cil_tmp46, __cil_tmp47, __cil_tmp48, namelen);
  }
#line 297
  if (n < 0) {
    {
#line 298
    __cil_tmp49 = (char const   * __restrict  )"dn_expand returned %d\n";
#line 298
    printf(__cil_tmp49, n);
#line 299
    __cil_tmp50 = (unsigned long )hp;
#line 299
    __cil_tmp51 = __cil_tmp50 + 3;
#line 299
    *((unsigned int *)__cil_tmp51) = 1U;
    }
#line 300
    return (-1);
  } else {

  }
  {
#line 303
  __cil_tmp52 = (char const   * __restrict  )"First dn_expand returned n = %d\n";
#line 303
  printf(__cil_tmp52, n);
#line 305
  cp = cp + n;
#line 306
  len = len + n;
#line 307
  __cil_tmp53 = (unsigned long )len;
#line 307
  __cil_tmp54 = __cil_tmp53 + 12UL;
#line 307
  len = (int )__cil_tmp54;
  }
  {
#line 309
  while (1) {
    while_continue: /* CIL Label */ ;
    {
#line 309
    __cil_tmp55 = (unsigned long )eom;
#line 309
    __cil_tmp56 = cp + 10;
#line 309
    __cil_tmp57 = (unsigned long )__cil_tmp56;
#line 309
    if (__cil_tmp57 > __cil_tmp55) {
#line 309
      __cil_tmp58 = (unsigned long )hp;
#line 309
      __cil_tmp59 = __cil_tmp58 + 3;
#line 309
      *((unsigned int *)__cil_tmp59) = 1U;
#line 309
      return (-1);
    } else {

    }
    }
#line 309
    goto while_break;
  }
  while_break: /* CIL Label */ ;
  }
  {
#line 310
  while (1) {
    while_continue___0: /* CIL Label */ ;
#line 310
    t_cp = (u_char const   *)cp;
#line 310
    __cil_tmp60 = t_cp + 1;
#line 310
    __cil_tmp61 = *__cil_tmp60;
#line 310
    __cil_tmp62 = (u_int16_t )__cil_tmp61;
#line 310
    __cil_tmp63 = (int )__cil_tmp62;
#line 310
    __cil_tmp64 = t_cp + 0;
#line 310
    __cil_tmp65 = *__cil_tmp64;
#line 310
    __cil_tmp66 = (u_int16_t )__cil_tmp65;
#line 310
    __cil_tmp67 = (int )__cil_tmp66;
#line 310
    __cil_tmp68 = __cil_tmp67 << 8;
#line 310
    __cil_tmp69 = __cil_tmp68 | __cil_tmp63;
#line 310
    type = (u_int )__cil_tmp69;
#line 310
    cp = cp + 2;
#line 310
    goto while_break___0;
  }
  while_break___0: /* CIL Label */ ;
  }
  {
#line 311
  cp = cp + 2;
#line 312
  len = len + 2;
#line 313
  __cil_tmp70 = (char const   * __restrict  )"type = %d\n";
#line 313
  printf(__cil_tmp70, type);
  }
  {
#line 314
  while (1) {
    while_continue___1: /* CIL Label */ ;
#line 314
    t_cp___0 = (u_char const   *)cp;
#line 314
    __cil_tmp71 = t_cp___0 + 1;
#line 314
    __cil_tmp72 = *__cil_tmp71;
#line 314
    __cil_tmp73 = (u_int16_t )__cil_tmp72;
#line 314
    __cil_tmp74 = (int )__cil_tmp73;
#line 314
    __cil_tmp75 = t_cp___0 + 0;
#line 314
    __cil_tmp76 = *__cil_tmp75;
#line 314
    __cil_tmp77 = (u_int16_t )__cil_tmp76;
#line 314
    __cil_tmp78 = (int )__cil_tmp77;
#line 314
    __cil_tmp79 = __cil_tmp78 << 8;
#line 314
    __cil_tmp80 = __cil_tmp79 | __cil_tmp74;
#line 314
    class = (u_int )__cil_tmp80;
#line 314
    cp = cp + 2;
#line 314
    goto while_break___1;
  }
  while_break___1: /* CIL Label */ ;
  }
  {
#line 315
  cp = cp + 2;
#line 316
  len = len + 2;
#line 317
  __cil_tmp81 = (char const   * __restrict  )"C_IN = %d. class = %d, CLASS_MAX = %d\n";
#line 317
  __cil_tmp82 = 1 << 8;
#line 317
  __cil_tmp83 = __cil_tmp82 - 1;
#line 317
  printf(__cil_tmp81, 1, class, __cil_tmp83);
  }
  {
#line 318
  __cil_tmp84 = 1 << 8;
#line 318
  __cil_tmp85 = __cil_tmp84 - 1;
#line 318
  __cil_tmp86 = (u_int )__cil_tmp85;
#line 318
  if (class > __cil_tmp86) {
    {
#line 319
    __cil_tmp87 = (char const   * __restrict  )"bad class in rrextract";
#line 319
    printf(__cil_tmp87);
#line 320
    __cil_tmp88 = (unsigned long )hp;
#line 320
    __cil_tmp89 = __cil_tmp88 + 3;
#line 320
    *((unsigned int *)__cil_tmp89) = 1U;
    }
#line 321
    return (-1);
  } else {

  }
  }
  {
#line 323
  while (1) {
    while_continue___2: /* CIL Label */ ;
#line 323
    t_cp___1 = (u_char const   *)cp;
#line 323
    __cil_tmp90 = t_cp___1 + 3;
#line 323
    __cil_tmp91 = *__cil_tmp90;
#line 323
    __cil_tmp92 = (u_int32_t )__cil_tmp91;
#line 323
    __cil_tmp93 = t_cp___1 + 2;
#line 323
    __cil_tmp94 = *__cil_tmp93;
#line 323
    __cil_tmp95 = (u_int32_t )__cil_tmp94;
#line 323
    __cil_tmp96 = __cil_tmp95 << 8;
#line 323
    __cil_tmp97 = t_cp___1 + 1;
#line 323
    __cil_tmp98 = *__cil_tmp97;
#line 323
    __cil_tmp99 = (u_int32_t )__cil_tmp98;
#line 323
    __cil_tmp100 = __cil_tmp99 << 16;
#line 323
    __cil_tmp101 = t_cp___1 + 0;
#line 323
    __cil_tmp102 = *__cil_tmp101;
#line 323
    __cil_tmp103 = (u_int32_t )__cil_tmp102;
#line 323
    __cil_tmp104 = __cil_tmp103 << 24;
#line 323
    __cil_tmp105 = __cil_tmp104 | __cil_tmp100;
#line 323
    __cil_tmp106 = __cil_tmp105 | __cil_tmp96;
#line 323
    ttl = __cil_tmp106 | __cil_tmp92;
#line 323
    cp = cp + 4;
#line 323
    goto while_break___2;
  }
  while_break___2: /* CIL Label */ ;
  }
  {
#line 324
  __cil_tmp107 = (char const   * __restrict  )"ttl = %d\n";
#line 324
  printf(__cil_tmp107, ttl);
#line 325
  cp = cp + 4;
#line 326
  len = len + 4;
  }
#line 328
  if (ttl > 2147483647U) {
    {
#line 329
    __cil_tmp108 = (char const   * __restrict  )"%s: converted TTL > %u to 0";
#line 329
    printf(__cil_tmp108, dname, 2147483647);
#line 332
    ttl = (u_int32_t )0;
    }
  } else {

  }
  {
#line 334
  while (1) {
    while_continue___3: /* CIL Label */ ;
#line 334
    t_cp___2 = (u_char const   *)cp;
#line 334
    __cil_tmp109 = t_cp___2 + 1;
#line 334
    __cil_tmp110 = *__cil_tmp109;
#line 334
    __cil_tmp111 = (u_int16_t )__cil_tmp110;
#line 334
    __cil_tmp112 = (int )__cil_tmp111;
#line 334
    __cil_tmp113 = t_cp___2 + 0;
#line 334
    __cil_tmp114 = *__cil_tmp113;
#line 334
    __cil_tmp115 = (u_int16_t )__cil_tmp114;
#line 334
    __cil_tmp116 = (int )__cil_tmp115;
#line 334
    __cil_tmp117 = __cil_tmp116 << 8;
#line 334
    __cil_tmp118 = __cil_tmp117 | __cil_tmp112;
#line 334
    dlen = (u_int )__cil_tmp118;
#line 334
    cp = cp + 2;
#line 334
    goto while_break___3;
  }
  while_break___3: /* CIL Label */ ;
  }
  {
#line 335
  cp = cp + 2;
#line 336
  len = len + 2;
#line 338
  __cil_tmp119 = (char const   * __restrict  )"dlen = %d\n";
#line 338
  printf(__cil_tmp119, dlen);
  }
  {
#line 339
  while (1) {
    while_continue___4: /* CIL Label */ ;
    {
#line 339
    __cil_tmp120 = (unsigned long )eom;
#line 339
    __cil_tmp121 = cp + dlen;
#line 339
    __cil_tmp122 = (unsigned long )__cil_tmp121;
#line 339
    if (__cil_tmp122 > __cil_tmp120) {
#line 339
      __cil_tmp123 = (unsigned long )hp;
#line 339
      __cil_tmp124 = __cil_tmp123 + 3;
#line 339
      *((unsigned int *)__cil_tmp124) = 1U;
#line 339
      return (-1);
    } else {

    }
    }
#line 339
    goto while_break___4;
  }
  while_break___4: /* CIL Label */ ;
  }
  {
#line 340
  __cil_tmp125 = (char const   * __restrict  )"bounds check succeeded\n";
#line 340
  printf(__cil_tmp125);
#line 341
  rdatap = cp;
#line 343
  __cil_tmp126 = (int )type;
#line 343
  __cil_tmp127 = (enum transport )2;
#line 343
  tmp = ns_ownercontext(__cil_tmp126, __cil_tmp127);
#line 343
  __cil_tmp128 = (char *)dname;
#line 343
  __cil_tmp129 = (char const   *)__cil_tmp128;
#line 343
  __cil_tmp130 = (int )class;
#line 343
  __cil_tmp131 = (void *)0;
#line 343
  __cil_tmp132 = (struct zoneinfo *)__cil_tmp131;
#line 343
  __cil_tmp133 = (enum transport )2;
#line 343
  __cil_tmp134 = (char *)dname;
#line 343
  __cil_tmp135 = (char const   *)__cil_tmp134;
#line 343
  tmp___0 = ns_nameok(__cil_tmp129, __cil_tmp130, __cil_tmp132, __cil_tmp133, tmp,
                      __cil_tmp135);
  }
#line 343
  if (tmp___0) {

  } else {
#line 346
    __cil_tmp136 = (unsigned long )hp;
#line 346
    __cil_tmp137 = __cil_tmp136 + 3;
#line 346
    *((unsigned int *)__cil_tmp137) = 5U;
#line 347
    return (-1);
  }
  {
#line 349
  __cil_tmp138 = (char const   * __restrict  )"rrextract: dname %s type %d class %d ttl %d\n";
#line 349
  printf(__cil_tmp138, dname, type, class, ttl);
  }
  {
#line 369
  if ((int )type == 1) {
#line 369
    goto case_1;
  } else {

  }
#line 378
  if ((int )type == 35) {
#line 378
    goto case_35;
  } else {

  }
#line 386
  if ((int )type == 15) {
#line 386
    goto case_15;
  } else {

  }
#line 387
  if ((int )type == 18) {
#line 387
    goto case_15;
  } else {

  }
#line 388
  if ((int )type == 21) {
#line 388
    goto case_15;
  } else {

  }
#line 389
  if ((int )type == 33) {
#line 389
    goto case_15;
  } else {

  }
#line 393
  if ((int )type == 26) {
#line 393
    goto case_26;
  } else {

  }
#line 397
  if ((int )type == 24) {
#line 397
    goto case_24;
  } else {

  }
#line 549
  goto switch_default___0;
  case_1: /* CIL Label */ 
#line 370
  if (dlen != 4U) {
#line 371
    __cil_tmp139 = (unsigned long )hp;
#line 371
    __cil_tmp140 = __cil_tmp139 + 3;
#line 371
    *((unsigned int *)__cil_tmp140) = 1U;
#line 372
    return (-1);
  } else {

  }
#line 375
  goto switch_break;
  case_35: /* CIL Label */ 
  {
#line 379
  __cil_tmp141 = (char const   * __restrict  )"NOT HANDLING T_NAPTR RECORDS\n";
#line 379
  printf(__cil_tmp141);
  }
#line 380
  goto switch_break;
  case_15: /* CIL Label */ 
  case_18: /* CIL Label */ 
  case_21: /* CIL Label */ 
  case_33: /* CIL Label */ 
  {
#line 390
  __cil_tmp142 = (char const   * __restrict  )"NOT HANDLING T_SRV RECORDS\n";
#line 390
  printf(__cil_tmp142);
  }
#line 391
  goto switch_break;
  case_26: /* CIL Label */ 
  {
#line 394
  __cil_tmp143 = (char const   * __restrict  )"NOT HANDLING T_PX RECORDS\n";
#line 394
  printf(__cil_tmp143);
  }
#line 395
  goto switch_break;
  case_24: /* CIL Label */ 
  {
#line 406
  while (1) {
    while_continue___5: /* CIL Label */ ;
    {
#line 406
    __cil_tmp144 = (unsigned long )eom;
#line 406
    __cil_tmp145 = cp + 16;
#line 406
    __cil_tmp146 = (unsigned long )__cil_tmp145;
#line 406
    if (__cil_tmp146 > __cil_tmp144) {
#line 406
      __cil_tmp147 = (unsigned long )hp;
#line 406
      __cil_tmp148 = __cil_tmp147 + 3;
#line 406
      *((unsigned int *)__cil_tmp148) = 1U;
#line 406
      return (-1);
    } else {

    }
    }
#line 406
    goto while_break___5;
  }
  while_break___5: /* CIL Label */ ;
  }
#line 408
  cp1 = cp;
  {
#line 410
  while (1) {
    while_continue___6: /* CIL Label */ ;
#line 410
    t_cp___3 = (u_char const   *)cp1;
#line 410
    __cil_tmp149 = t_cp___3 + 1;
#line 410
    __cil_tmp150 = *__cil_tmp149;
#line 410
    __cil_tmp151 = (u_int16_t )__cil_tmp150;
#line 410
    __cil_tmp152 = (int )__cil_tmp151;
#line 410
    __cil_tmp153 = t_cp___3 + 0;
#line 410
    __cil_tmp154 = *__cil_tmp153;
#line 410
    __cil_tmp155 = (u_int16_t )__cil_tmp154;
#line 410
    __cil_tmp156 = (int )__cil_tmp155;
#line 410
    __cil_tmp157 = __cil_tmp156 << 8;
#line 410
    __cil_tmp158 = __cil_tmp157 | __cil_tmp152;
#line 410
    temp = (u_int )__cil_tmp158;
#line 410
    cp1 = cp1 + 2;
#line 410
    goto while_break___6;
  }
  while_break___6: /* CIL Label */ ;
  }
  {
#line 411
  __cil_tmp159 = (char const   * __restrict  )"covered type = %d\n";
#line 411
  printf(__cil_tmp159, temp);
#line 412
  cp1 = cp1 + 2;
#line 413
  len = len + 2;
  }
  {
#line 415
  while (1) {
    while_continue___7: /* CIL Label */ ;
#line 415
    t_cp___4 = (u_char const   *)cp1;
#line 415
    __cil_tmp160 = t_cp___4 + 1;
#line 415
    __cil_tmp161 = *__cil_tmp160;
#line 415
    __cil_tmp162 = (u_int16_t )__cil_tmp161;
#line 415
    __cil_tmp163 = (int )__cil_tmp162;
#line 415
    __cil_tmp164 = t_cp___4 + 0;
#line 415
    __cil_tmp165 = *__cil_tmp164;
#line 415
    __cil_tmp166 = (u_int16_t )__cil_tmp165;
#line 415
    __cil_tmp167 = (int )__cil_tmp166;
#line 415
    __cil_tmp168 = __cil_tmp167 << 8;
#line 415
    __cil_tmp169 = __cil_tmp168 | __cil_tmp163;
#line 415
    temp = (u_int )__cil_tmp169;
#line 415
    cp1 = cp1 + 2;
#line 415
    goto while_break___7;
  }
  while_break___7: /* CIL Label */ ;
  }
  {
#line 416
  __cil_tmp170 = (char const   * __restrict  )" alg label = %d\n";
#line 416
  printf(__cil_tmp170, temp);
#line 417
  __cil_tmp171 = temp / 256U;
#line 417
  alg = (u_int8_t )__cil_tmp171;
#line 418
  cp1 = cp1 + 2;
#line 419
  len = len + 2;
#line 421
  __cil_tmp172 = (char const   * __restrict  )"alg = %d\n";
#line 421
  __cil_tmp173 = (int )alg;
#line 421
  printf(__cil_tmp172, __cil_tmp173);
  }
  {
#line 423
  while (1) {
    while_continue___8: /* CIL Label */ ;
#line 423
    t_cp___5 = (u_char const   *)cp1;
#line 423
    __cil_tmp174 = t_cp___5 + 3;
#line 423
    __cil_tmp175 = *__cil_tmp174;
#line 423
    __cil_tmp176 = (u_int32_t )__cil_tmp175;
#line 423
    __cil_tmp177 = t_cp___5 + 2;
#line 423
    __cil_tmp178 = *__cil_tmp177;
#line 423
    __cil_tmp179 = (u_int32_t )__cil_tmp178;
#line 423
    __cil_tmp180 = __cil_tmp179 << 8;
#line 423
    __cil_tmp181 = t_cp___5 + 1;
#line 423
    __cil_tmp182 = *__cil_tmp181;
#line 423
    __cil_tmp183 = (u_int32_t )__cil_tmp182;
#line 423
    __cil_tmp184 = __cil_tmp183 << 16;
#line 423
    __cil_tmp185 = t_cp___5 + 0;
#line 423
    __cil_tmp186 = *__cil_tmp185;
#line 423
    __cil_tmp187 = (u_int32_t )__cil_tmp186;
#line 423
    __cil_tmp188 = __cil_tmp187 << 24;
#line 423
    __cil_tmp189 = __cil_tmp188 | __cil_tmp184;
#line 423
    __cil_tmp190 = __cil_tmp189 | __cil_tmp180;
#line 423
    __cil_tmp191 = __cil_tmp190 | __cil_tmp176;
#line 423
    origTTL = (u_long )__cil_tmp191;
#line 423
    cp1 = cp1 + 4;
#line 423
    goto while_break___8;
  }
  while_break___8: /* CIL Label */ ;
  }
  {
#line 424
  cp1 = cp1 + 4;
#line 425
  len = len + 4;
#line 427
  __cil_tmp192 = (char const   * __restrict  )"origttl = %d\n";
#line 427
  __cil_tmp193 = (int )origTTL;
#line 427
  printf(__cil_tmp192, __cil_tmp193);
  }
  {
#line 428
  while (1) {
    while_continue___9: /* CIL Label */ ;
#line 428
    t_cp___6 = (u_char const   *)cp1;
#line 428
    __cil_tmp194 = t_cp___6 + 3;
#line 428
    __cil_tmp195 = *__cil_tmp194;
#line 428
    __cil_tmp196 = (u_int32_t )__cil_tmp195;
#line 428
    __cil_tmp197 = t_cp___6 + 2;
#line 428
    __cil_tmp198 = *__cil_tmp197;
#line 428
    __cil_tmp199 = (u_int32_t )__cil_tmp198;
#line 428
    __cil_tmp200 = __cil_tmp199 << 8;
#line 428
    __cil_tmp201 = t_cp___6 + 1;
#line 428
    __cil_tmp202 = *__cil_tmp201;
#line 428
    __cil_tmp203 = (u_int32_t )__cil_tmp202;
#line 428
    __cil_tmp204 = __cil_tmp203 << 16;
#line 428
    __cil_tmp205 = t_cp___6 + 0;
#line 428
    __cil_tmp206 = *__cil_tmp205;
#line 428
    __cil_tmp207 = (u_int32_t )__cil_tmp206;
#line 428
    __cil_tmp208 = __cil_tmp207 << 24;
#line 428
    __cil_tmp209 = __cil_tmp208 | __cil_tmp204;
#line 428
    __cil_tmp210 = __cil_tmp209 | __cil_tmp200;
#line 428
    __cil_tmp211 = __cil_tmp210 | __cil_tmp196;
#line 428
    exptime = (u_long )__cil_tmp211;
#line 428
    cp1 = cp1 + 4;
#line 428
    goto while_break___9;
  }
  while_break___9: /* CIL Label */ ;
  }
  {
#line 429
  __cil_tmp212 = (char const   * __restrict  )"Exptime = %d\n";
#line 429
  __cil_tmp213 = (int )exptime;
#line 429
  printf(__cil_tmp212, __cil_tmp213);
#line 430
  cp1 = cp1 + 4;
#line 431
  len = len + 4;
  }
  {
#line 433
  while (1) {
    while_continue___10: /* CIL Label */ ;
#line 433
    t_cp___7 = (u_char const   *)cp1;
#line 433
    __cil_tmp214 = t_cp___7 + 3;
#line 433
    __cil_tmp215 = *__cil_tmp214;
#line 433
    __cil_tmp216 = (u_int32_t )__cil_tmp215;
#line 433
    __cil_tmp217 = t_cp___7 + 2;
#line 433
    __cil_tmp218 = *__cil_tmp217;
#line 433
    __cil_tmp219 = (u_int32_t )__cil_tmp218;
#line 433
    __cil_tmp220 = __cil_tmp219 << 8;
#line 433
    __cil_tmp221 = t_cp___7 + 1;
#line 433
    __cil_tmp222 = *__cil_tmp221;
#line 433
    __cil_tmp223 = (u_int32_t )__cil_tmp222;
#line 433
    __cil_tmp224 = __cil_tmp223 << 16;
#line 433
    __cil_tmp225 = t_cp___7 + 0;
#line 433
    __cil_tmp226 = *__cil_tmp225;
#line 433
    __cil_tmp227 = (u_int32_t )__cil_tmp226;
#line 433
    __cil_tmp228 = __cil_tmp227 << 24;
#line 433
    __cil_tmp229 = __cil_tmp228 | __cil_tmp224;
#line 433
    __cil_tmp230 = __cil_tmp229 | __cil_tmp220;
#line 433
    __cil_tmp231 = __cil_tmp230 | __cil_tmp216;
#line 433
    signtime = (u_long )__cil_tmp231;
#line 433
    cp1 = cp1 + 4;
#line 433
    goto while_break___10;
  }
  while_break___10: /* CIL Label */ ;
  }
  {
#line 434
  __cil_tmp232 = (char const   * __restrict  )"Sign time = %d\n";
#line 434
  __cil_tmp233 = (int )signtime;
#line 434
  printf(__cil_tmp232, __cil_tmp233);
#line 435
  cp1 = cp1 + 4;
#line 436
  len = len + 4;
  }
  {
#line 438
  while (1) {
    while_continue___11: /* CIL Label */ ;
#line 438
    t_cp___8 = (u_char const   *)cp1;
#line 438
    __cil_tmp234 = t_cp___8 + 1;
#line 438
    __cil_tmp235 = *__cil_tmp234;
#line 438
    __cil_tmp236 = (u_int16_t )__cil_tmp235;
#line 438
    __cil_tmp237 = (int )__cil_tmp236;
#line 438
    __cil_tmp238 = t_cp___8 + 0;
#line 438
    __cil_tmp239 = *__cil_tmp238;
#line 438
    __cil_tmp240 = (u_int16_t )__cil_tmp239;
#line 438
    __cil_tmp241 = (int )__cil_tmp240;
#line 438
    __cil_tmp242 = __cil_tmp241 << 8;
#line 438
    __cil_tmp243 = __cil_tmp242 | __cil_tmp237;
#line 438
    temp = (u_int )__cil_tmp243;
#line 438
    cp1 = cp1 + 2;
#line 438
    goto while_break___11;
  }
  while_break___11: /* CIL Label */ ;
  }
  {
#line 439
  __cil_tmp244 = (char const   * __restrict  )"random footprint = %d\n";
#line 439
  printf(__cil_tmp244, temp);
#line 440
  cp1 = cp1 + 2;
#line 441
  len = len + 2;
#line 443
  __cil_tmp245 = (void *)0;
#line 443
  __cil_tmp246 = (time_t *)__cil_tmp245;
#line 443
  tmp___1 = time(__cil_tmp246);
#line 443
  now = (u_long )tmp___1;
#line 445
  __cil_tmp247 = (char const   * __restrict  )"now = %d\n";
#line 445
  __cil_tmp248 = (int )now;
#line 445
  printf(__cil_tmp247, __cil_tmp248);
  }
  {
#line 447
  __cil_tmp249 = (u_long )ttl;
#line 447
  if (__cil_tmp249 > origTTL) {
    {
#line 448
    __cil_tmp250 = (char const   * __restrict  )"shrinking SIG TTL";
#line 448
    printf(__cil_tmp250);
#line 450
    ttl = (u_int32_t )origTTL;
    }
  } else {

  }
  }
#line 454
  if (signtime > now) {
    {
#line 455
    tmp___2 = __p_secstodate(signtime);
#line 455
    __cil_tmp251 = (char const   * __restrict  )"ignoring SIG: signature date %s is in the future";
#line 455
    printf(__cil_tmp251, tmp___2);
    }
    {
#line 456
    __cil_tmp252 = cp - rrp;
#line 456
    __cil_tmp253 = (u_int )__cil_tmp252;
#line 456
    __cil_tmp254 = __cil_tmp253 + dlen;
#line 456
    return ((int )__cil_tmp254);
    }
  } else {

  }
#line 460
  if (exptime <= now) {
    {
#line 461
    tmp___3 = __p_secstodate(exptime);
#line 461
    __cil_tmp255 = (char const   * __restrict  )"ignoring SIG: expiration %s is in the past";
#line 461
    printf(__cil_tmp255, tmp___3);
    }
    {
#line 463
    __cil_tmp256 = cp - rrp;
#line 463
    __cil_tmp257 = (u_int )__cil_tmp256;
#line 463
    __cil_tmp258 = __cil_tmp257 + dlen;
#line 463
    return ((int )__cil_tmp258);
    }
  } else {

  }
#line 467
  timetilexp = exptime - now;
  {
#line 468
  __cil_tmp259 = (u_long )ttl;
#line 468
  if (timetilexp < __cil_tmp259) {
    {
#line 469
    __cil_tmp260 = (char const   * __restrict  )"shrinking expiring SIG TTL";
#line 469
    printf(__cil_tmp260);
#line 471
    ttl = (u_int32_t )timetilexp;
    }
  } else {

  }
  }
#line 474
  cp = cp1 - 18;
#line 477
  __cil_tmp261 = 0 * 1UL;
#line 477
  __cil_tmp262 = (unsigned long )(data) + __cil_tmp261;
#line 477
  cp1 = (u_char *)__cil_tmp262;
  {
#line 481
  while (1) {
    while_continue___12: /* CIL Label */ ;
    {
#line 481
    __cil_tmp263 = (unsigned long )eom;
#line 481
    __cil_tmp264 = cp + 18;
#line 481
    __cil_tmp265 = (unsigned long )__cil_tmp264;
#line 481
    if (__cil_tmp265 > __cil_tmp263) {
#line 481
      __cil_tmp266 = (unsigned long )hp;
#line 481
      __cil_tmp267 = __cil_tmp266 + 3;
#line 481
      *((unsigned int *)__cil_tmp267) = 1U;
#line 481
      return (-1);
    } else {

    }
    }
#line 481
    goto while_break___12;
  }
  while_break___12: /* CIL Label */ ;
  }
  {
#line 482
  __cil_tmp268 = (void * __restrict  )cp1;
#line 482
  __cil_tmp269 = (void const   * __restrict  )cp;
#line 482
  __cil_tmp270 = (size_t )18;
#line 482
  memcpy(__cil_tmp268, __cil_tmp269, __cil_tmp270);
#line 484
  cp1 = cp1 + 18;
#line 487
  __cil_tmp271 = (char const   * __restrict  )"sizeof data = %d\n";
#line 487
  printf(__cil_tmp271, 4140UL);
#line 488
  __cil_tmp272 = (char const   * __restrict  )"comp name = %s\n";
#line 488
  __cil_tmp273 = (char *)cp;
#line 488
  __cil_tmp274 = __cil_tmp273 + 18;
#line 488
  printf(__cil_tmp272, __cil_tmp274);
#line 490
  __cil_tmp275 = (u_char const   *)msg;
#line 490
  __cil_tmp276 = (u_char const   *)eom;
#line 490
  __cil_tmp277 = cp + 18;
#line 490
  __cil_tmp278 = (u_char const   *)__cil_tmp277;
#line 490
  __cil_tmp279 = (char *)cp1;
#line 490
  __cil_tmp280 = 4140UL - 18UL;
#line 490
  __cil_tmp281 = (int )__cil_tmp280;
#line 490
  n = __dn_expand(__cil_tmp275, __cil_tmp276, __cil_tmp278, __cil_tmp279, __cil_tmp281);
#line 494
  __cil_tmp282 = (char const   * __restrict  )"dn_expand returned:  %d, expanded name = %s\n";
#line 494
  __cil_tmp283 = (char *)cp1;
#line 494
  printf(__cil_tmp282, n, __cil_tmp283);
  }
#line 496
  if (n < 0) {
    {
#line 497
    __cil_tmp284 = (char const   * __restrict  )"ERROR: Either n = %d < 0 or n+ns_sig_signer = %d > dlen = %d!\n";
#line 497
    __cil_tmp285 = n + 18;
#line 497
    printf(__cil_tmp284, n, __cil_tmp285, dlen);
#line 498
    __cil_tmp286 = (char const   * __restrict  )"EXITING RREXTRACT!\n";
#line 498
    printf(__cil_tmp286);
#line 499
    __cil_tmp287 = (unsigned long )hp;
#line 499
    __cil_tmp288 = __cil_tmp287 + 3;
#line 499
    *((unsigned int *)__cil_tmp288) = 1U;
    }
#line 500
    return (-1);
  } else {
    {
#line 496
    __cil_tmp289 = n + 18;
#line 496
    __cil_tmp290 = (u_int )__cil_tmp289;
#line 496
    if (__cil_tmp290 > dlen) {
      {
#line 497
      __cil_tmp291 = (char const   * __restrict  )"ERROR: Either n = %d < 0 or n+ns_sig_signer = %d > dlen = %d!\n";
#line 497
      __cil_tmp292 = n + 18;
#line 497
      printf(__cil_tmp291, n, __cil_tmp292, dlen);
#line 498
      __cil_tmp293 = (char const   * __restrict  )"EXITING RREXTRACT!\n";
#line 498
      printf(__cil_tmp293);
#line 499
      __cil_tmp294 = (unsigned long )hp;
#line 499
      __cil_tmp295 = __cil_tmp294 + 3;
#line 499
      *((unsigned int *)__cil_tmp295) = 1U;
      }
#line 500
      return (-1);
    } else {

    }
    }
  }
  {
#line 502
  cp = cp + n;
#line 503
  __cil_tmp296 = (char *)cp1;
#line 503
  __cil_tmp297 = (char const   *)__cil_tmp296;
#line 503
  tmp___4 = strlen(__cil_tmp297);
#line 503
  __cil_tmp298 = tmp___4 + 1UL;
#line 503
  cp1 = cp1 + __cil_tmp298;
#line 507
  __cil_tmp299 = 18 + n;
#line 507
  __cil_tmp300 = (u_int )__cil_tmp299;
#line 507
  __cil_tmp301 = dlen - __cil_tmp300;
#line 507
  n = (int )__cil_tmp301;
#line 508
  __cil_tmp302 = (char const   * __restrict  )"dlen - NS_SIG_SIGNER - n = %d\n";
#line 508
  printf(__cil_tmp302, n);
  }
  {
#line 511
  __cil_tmp303 = 0 * 1UL;
#line 511
  __cil_tmp304 = (unsigned long )(data) + __cil_tmp303;
#line 511
  __cil_tmp305 = (u_char *)__cil_tmp304;
#line 511
  __cil_tmp306 = cp1 - __cil_tmp305;
#line 511
  __cil_tmp307 = (unsigned long )__cil_tmp306;
#line 511
  __cil_tmp308 = 4140UL - __cil_tmp307;
#line 511
  __cil_tmp309 = (unsigned long )n;
#line 511
  if (__cil_tmp309 > __cil_tmp308) {
#line 512
    __cil_tmp310 = (unsigned long )hp;
#line 512
    __cil_tmp311 = __cil_tmp310 + 3;
#line 512
    *((unsigned int *)__cil_tmp311) = 1U;
#line 513
    return (-1);
  } else {

  }
  }
  {
#line 517
  if ((int )alg == 1) {
#line 517
    goto case_1___0;
  } else {

  }
#line 522
  if ((int )alg == 3) {
#line 522
    goto case_3;
  } else {

  }
#line 527
  goto switch_default;
  case_1___0: /* CIL Label */ 
#line 518
  if (n < 64) {
#line 519
    __cil_tmp312 = (unsigned long )hp;
#line 519
    __cil_tmp313 = __cil_tmp312 + 3;
#line 519
    *((unsigned int *)__cil_tmp313) = 1U;
  } else
#line 518
  if (n > 512) {
#line 519
    __cil_tmp314 = (unsigned long )hp;
#line 519
    __cil_tmp315 = __cil_tmp314 + 3;
#line 519
    *((unsigned int *)__cil_tmp315) = 1U;
  } else {

  }
#line 520
  goto switch_break___0;
  case_3: /* CIL Label */ 
#line 523
  if (n != 41) {
#line 524
    __cil_tmp316 = (unsigned long )hp;
#line 524
    __cil_tmp317 = __cil_tmp316 + 3;
#line 524
    *((unsigned int *)__cil_tmp317) = 1U;
  } else {

  }
#line 525
  goto switch_break___0;
  switch_default: /* CIL Label */ 
  {
#line 528
  __cil_tmp318 = (char const   * __restrict  )"DEFAULT ALG!\n";
#line 528
  printf(__cil_tmp318);
  }
#line 529
  goto switch_break___0;
  switch_break___0: /* CIL Label */ ;
  }
  {
#line 532
  __cil_tmp319 = (unsigned long )hp;
#line 532
  __cil_tmp320 = __cil_tmp319 + 3;
#line 532
  __cil_tmp321 = *((unsigned int *)__cil_tmp320);
#line 532
  if (__cil_tmp321 == 1U) {
#line 533
    return (-1);
  } else {

  }
  }
  {
#line 535
  __cil_tmp322 = (char const   * __restrict  )"MEMCPY: Copying %u bytes into data buf!\n";
#line 535
  printf(__cil_tmp322, n);
  }
  {
#line 539
  __cil_tmp323 = (void * __restrict  )cp1;
#line 539
  __cil_tmp324 = (void const   * __restrict  )cp;
#line 539
  __cil_tmp325 = (size_t )n;
#line 539
  memcpy(__cil_tmp323, __cil_tmp324, __cil_tmp325);
#line 540
  cp = cp + n;
#line 541
  cp1 = cp1 + n;
#line 544
  __cil_tmp326 = 0 * 1UL;
#line 544
  __cil_tmp327 = (unsigned long )(data) + __cil_tmp326;
#line 544
  __cil_tmp328 = (u_char *)__cil_tmp327;
#line 544
  n = cp1 - __cil_tmp328;
#line 545
  __cil_tmp329 = 0 * 1UL;
#line 545
  __cil_tmp330 = (unsigned long )(data) + __cil_tmp329;
#line 545
  cp1 = (u_char *)__cil_tmp330;
  }
#line 546
  goto switch_break;
  switch_default___0: /* CIL Label */ 
  {
#line 550
  __cil_tmp331 = (char const   * __restrict  )"unknown type %d";
#line 550
  printf(__cil_tmp331, type);
  }
  {
#line 551
  __cil_tmp332 = cp - rrp;
#line 551
  __cil_tmp333 = (u_int )__cil_tmp332;
#line 551
  __cil_tmp334 = __cil_tmp333 + dlen;
#line 551
  return ((int )__cil_tmp334);
  }
  switch_break: /* CIL Label */ ;
  }
  {
#line 554
  __cil_tmp335 = (unsigned long )eom;
#line 554
  __cil_tmp336 = (unsigned long )cp;
#line 554
  if (__cil_tmp336 > __cil_tmp335) {
#line 555
    __cil_tmp337 = (unsigned long )hp;
#line 555
    __cil_tmp338 = __cil_tmp337 + 3;
#line 555
    *((unsigned int *)__cil_tmp338) = 1U;
#line 556
    return (-1);
  } else {

  }
  }
  {
#line 558
  __cil_tmp339 = cp - rdatap;
#line 558
  __cil_tmp340 = (u_int )__cil_tmp339;
#line 558
  if (__cil_tmp340 != dlen) {
    {
#line 560
    __cil_tmp341 = (char const   * __restrict  )"encoded rdata length is %u, but actual length was %u";
#line 560
    __cil_tmp342 = cp - rdatap;
#line 560
    __cil_tmp343 = (u_int )__cil_tmp342;
#line 560
    printf(__cil_tmp341, dlen, __cil_tmp343);
#line 562
    __cil_tmp344 = (unsigned long )hp;
#line 562
    __cil_tmp345 = __cil_tmp344 + 3;
#line 562
    *((unsigned int *)__cil_tmp345) = 1U;
    }
#line 564
    return (-1);
  } else {

  }
  }
#line 566
  if (n > 2070) {
    {
#line 567
    __cil_tmp346 = (char const   * __restrict  )"update type %d: %d bytes is too much data";
#line 567
    printf(__cil_tmp346, type, n);
#line 570
    __cil_tmp347 = (unsigned long )hp;
#line 570
    __cil_tmp348 = __cil_tmp347 + 3;
#line 570
    *((unsigned int *)__cil_tmp348) = 1U;
    }
#line 571
    return (-1);
  } else {

  }
#line 577
  return (cp - rrp);
}
}
#line 585 "sig-ok.c"
int createSig(u_char *buf ) 
{ u_char *p ;
  char *temp ;
  char *temp1 ;
  u_char *comp_dn ;
  u_char *comp_dn2 ;
  char exp_dn[200] ;
  char exp_dn2[200] ;
  u_char **dnptrs ;
  u_char **lastdnptr ;
  u_char **dnptrs2 ;
  int i ;
  int len ;
  int comp_size ;
  u_long now ;
  void *tmp ;
  void *tmp___0 ;
  void *tmp___1 ;
  void *tmp___2 ;
  void *tmp___3 ;
  size_t tmp___4 ;
  u_char *tmp___5 ;
  char *tmp___6 ;
  u_char **tmp___7 ;
  u_char **tmp___8 ;
  size_t tmp___9 ;
  u_char *tmp___10 ;
  u_char *tmp___11 ;
  register u_int16_t t_s ;
  register u_char *t_cp ;
  u_char *tmp___12 ;
  register u_int16_t t_s___0 ;
  register u_char *t_cp___0 ;
  u_char *tmp___13 ;
  register u_int32_t t_l ;
  register u_char *t_cp___1 ;
  u_char *tmp___14 ;
  u_char *tmp___15 ;
  u_char *tmp___16 ;
  register u_int16_t t_s___1 ;
  register u_char *t_cp___2 ;
  u_char *tmp___17 ;
  register u_int16_t t_s___2 ;
  register u_char *t_cp___3 ;
  u_char *tmp___18 ;
  register u_int16_t t_s___3 ;
  register u_char *t_cp___4 ;
  u_char *tmp___19 ;
  register u_int32_t t_l___0 ;
  register u_char *t_cp___5 ;
  u_char *tmp___20 ;
  u_char *tmp___21 ;
  u_char *tmp___22 ;
  time_t tmp___23 ;
  register u_int32_t t_l___1 ;
  register u_char *t_cp___6 ;
  u_char *tmp___24 ;
  u_char *tmp___25 ;
  u_char *tmp___26 ;
  register u_int32_t t_l___2 ;
  register u_char *t_cp___7 ;
  u_char *tmp___27 ;
  u_char *tmp___28 ;
  u_char *tmp___29 ;
  register u_int16_t t_s___4 ;
  register u_char *t_cp___8 ;
  u_char *tmp___30 ;
  u_char **tmp___31 ;
  u_char **tmp___32 ;
  size_t tmp___33 ;
  u_char *tmp___34 ;
  u_char *tmp___35 ;
  register u_int32_t t_l___3 ;
  register u_char *t_cp___9 ;
  u_char *tmp___36 ;
  u_char *tmp___37 ;
  u_char *tmp___38 ;
  unsigned long __cil_tmp78 ;
  unsigned long __cil_tmp79 ;
  unsigned long __cil_tmp80 ;
  unsigned long __cil_tmp81 ;
  unsigned long __cil_tmp82 ;
  char * __restrict  __cil_tmp83 ;
  char const   * __restrict  __cil_tmp84 ;
  char const   *__cil_tmp85 ;
  size_t __cil_tmp86 ;
  size_t __cil_tmp87 ;
  char __cil_tmp88 ;
  int __cil_tmp89 ;
  char __cil_tmp90 ;
  unsigned long __cil_tmp91 ;
  unsigned long __cil_tmp92 ;
  char *__cil_tmp93 ;
  char * __restrict  __cil_tmp94 ;
  char const   * __restrict  __cil_tmp95 ;
  unsigned long __cil_tmp96 ;
  unsigned long __cil_tmp97 ;
  char *__cil_tmp98 ;
  void *__cil_tmp99 ;
  void *__cil_tmp100 ;
  char const   * __restrict  __cil_tmp101 ;
  unsigned long __cil_tmp102 ;
  unsigned long __cil_tmp103 ;
  char *__cil_tmp104 ;
  char const   *__cil_tmp105 ;
  unsigned long __cil_tmp106 ;
  unsigned long __cil_tmp107 ;
  char *__cil_tmp108 ;
  char const   *__cil_tmp109 ;
  char const   * __restrict  __cil_tmp110 ;
  char const   * __restrict  __cil_tmp111 ;
  char const   * __restrict  __cil_tmp112 ;
  unsigned long __cil_tmp113 ;
  unsigned long __cil_tmp114 ;
  char *__cil_tmp115 ;
  char *__cil_tmp116 ;
  int __cil_tmp117 ;
  int __cil_tmp118 ;
  int __cil_tmp119 ;
  int __cil_tmp120 ;
  u_int32_t __cil_tmp121 ;
  u_int32_t __cil_tmp122 ;
  u_int32_t __cil_tmp123 ;
  int __cil_tmp124 ;
  int __cil_tmp125 ;
  int __cil_tmp126 ;
  int __cil_tmp127 ;
  int __cil_tmp128 ;
  int __cil_tmp129 ;
  u_int32_t __cil_tmp130 ;
  u_int32_t __cil_tmp131 ;
  u_int32_t __cil_tmp132 ;
  void *__cil_tmp133 ;
  time_t *__cil_tmp134 ;
  char const   * __restrict  __cil_tmp135 ;
  u_long __cil_tmp136 ;
  u_int32_t __cil_tmp137 ;
  u_int32_t __cil_tmp138 ;
  u_int32_t __cil_tmp139 ;
  u_int32_t __cil_tmp140 ;
  u_int32_t __cil_tmp141 ;
  u_int32_t __cil_tmp142 ;
  int __cil_tmp143 ;
  int __cil_tmp144 ;
  unsigned long __cil_tmp145 ;
  unsigned long __cil_tmp146 ;
  char *__cil_tmp147 ;
  char * __restrict  __cil_tmp148 ;
  char const   * __restrict  __cil_tmp149 ;
  unsigned long __cil_tmp150 ;
  unsigned long __cil_tmp151 ;
  char *__cil_tmp152 ;
  void *__cil_tmp153 ;
  void *__cil_tmp154 ;
  char const   * __restrict  __cil_tmp155 ;
  unsigned long __cil_tmp156 ;
  unsigned long __cil_tmp157 ;
  char *__cil_tmp158 ;
  char const   *__cil_tmp159 ;
  unsigned long __cil_tmp160 ;
  unsigned long __cil_tmp161 ;
  char *__cil_tmp162 ;
  char const   *__cil_tmp163 ;
  char const   * __restrict  __cil_tmp164 ;
  char const   * __restrict  __cil_tmp165 ;
  char const   * __restrict  __cil_tmp166 ;
  unsigned long __cil_tmp167 ;
  unsigned long __cil_tmp168 ;
  char *__cil_tmp169 ;
  char *__cil_tmp170 ;
  u_int32_t __cil_tmp171 ;
  u_int32_t __cil_tmp172 ;
  u_int32_t __cil_tmp173 ;

  {
  {
#line 591
  len = 0;
#line 595
  __cil_tmp78 = 2UL * 8UL;
#line 595
  tmp = malloc(__cil_tmp78);
#line 595
  dnptrs = (unsigned char **)tmp;
#line 596
  __cil_tmp79 = 2UL * 8UL;
#line 596
  tmp___0 = malloc(__cil_tmp79);
#line 596
  dnptrs2 = (unsigned char **)tmp___0;
#line 598
  __cil_tmp80 = 200UL * 1UL;
#line 598
  tmp___1 = malloc(__cil_tmp80);
#line 598
  comp_dn = (unsigned char *)tmp___1;
#line 599
  __cil_tmp81 = 200UL * 1UL;
#line 599
  tmp___2 = malloc(__cil_tmp81);
#line 599
  comp_dn2 = (unsigned char *)tmp___2;
#line 601
  __cil_tmp82 = 400UL * 1UL;
#line 601
  tmp___3 = malloc(__cil_tmp82);
#line 601
  temp1 = (char *)tmp___3;
#line 603
  temp = temp1;
#line 605
  p = buf;
#line 607
  __cil_tmp83 = (char * __restrict  )temp;
#line 607
  __cil_tmp84 = (char const   * __restrict  )"HEADER JUNK:";
#line 607
  strcpy(__cil_tmp83, __cil_tmp84);
#line 609
  __cil_tmp85 = (char const   *)temp;
#line 609
  tmp___4 = strlen(__cil_tmp85);
#line 609
  __cil_tmp86 = (size_t )len;
#line 609
  __cil_tmp87 = __cil_tmp86 + tmp___4;
#line 609
  len = (int )__cil_tmp87;
  }
  {
#line 611
  while (1) {
    while_continue: /* CIL Label */ ;
    {
#line 611
    __cil_tmp88 = *temp;
#line 611
    __cil_tmp89 = (int )__cil_tmp88;
#line 611
    if (__cil_tmp89 != 0) {

    } else {
#line 611
      goto while_break;
    }
    }
#line 612
    tmp___5 = p;
#line 612
    p = p + 1;
#line 612
    tmp___6 = temp;
#line 612
    temp = temp + 1;
#line 612
    __cil_tmp90 = *tmp___6;
#line 612
    *tmp___5 = (u_char )__cil_tmp90;
  }
  while_break: /* CIL Label */ ;
  }
  {
#line 614
  __cil_tmp91 = 0 * 1UL;
#line 614
  __cil_tmp92 = (unsigned long )(exp_dn) + __cil_tmp91;
#line 614
  __cil_tmp93 = (char *)__cil_tmp92;
#line 614
  __cil_tmp94 = (char * __restrict  )__cil_tmp93;
#line 614
  __cil_tmp95 = (char const   * __restrict  )"lcs.mit.edu";
#line 614
  strcpy(__cil_tmp94, __cil_tmp95);
#line 616
  tmp___7 = dnptrs;
#line 616
  dnptrs = dnptrs + 1;
#line 616
  __cil_tmp96 = 0 * 1UL;
#line 616
  __cil_tmp97 = (unsigned long )(exp_dn) + __cil_tmp96;
#line 616
  __cil_tmp98 = (char *)__cil_tmp97;
#line 616
  *tmp___7 = (u_char *)__cil_tmp98;
#line 617
  tmp___8 = dnptrs;
#line 617
  dnptrs = dnptrs - 1;
#line 617
  __cil_tmp99 = (void *)0;
#line 617
  *tmp___8 = (u_char *)__cil_tmp99;
#line 619
  __cil_tmp100 = (void *)0;
#line 619
  lastdnptr = (u_char **)__cil_tmp100;
#line 621
  __cil_tmp101 = (char const   * __restrict  )"Calling dn_comp..\n";
#line 621
  printf(__cil_tmp101);
#line 622
  __cil_tmp102 = 0 * 1UL;
#line 622
  __cil_tmp103 = (unsigned long )(exp_dn) + __cil_tmp102;
#line 622
  __cil_tmp104 = (char *)__cil_tmp103;
#line 622
  __cil_tmp105 = (char const   *)__cil_tmp104;
#line 622
  comp_size = __dn_comp(__cil_tmp105, comp_dn, 200, dnptrs, lastdnptr);
#line 623
  __cil_tmp106 = 0 * 1UL;
#line 623
  __cil_tmp107 = (unsigned long )(exp_dn) + __cil_tmp106;
#line 623
  __cil_tmp108 = (char *)__cil_tmp107;
#line 623
  __cil_tmp109 = (char const   *)__cil_tmp108;
#line 623
  tmp___9 = strlen(__cil_tmp109);
#line 623
  __cil_tmp110 = (char const   * __restrict  )"uncomp_size = %d\n";
#line 623
  printf(__cil_tmp110, tmp___9);
#line 624
  __cil_tmp111 = (char const   * __restrict  )"comp_size = %d\n";
#line 624
  printf(__cil_tmp111, comp_size);
#line 625
  __cil_tmp112 = (char const   * __restrict  )"exp_dn = %s, comp_dn = %s\n";
#line 625
  __cil_tmp113 = 0 * 1UL;
#line 625
  __cil_tmp114 = (unsigned long )(exp_dn) + __cil_tmp113;
#line 625
  __cil_tmp115 = (char *)__cil_tmp114;
#line 625
  __cil_tmp116 = (char *)comp_dn;
#line 625
  printf(__cil_tmp112, __cil_tmp115, __cil_tmp116);
#line 627
  i = 0;
  }
  {
#line 627
  while (1) {
    while_continue___0: /* CIL Label */ ;
#line 627
    if (i < comp_size) {

    } else {
#line 627
      goto while_break___0;
    }
#line 628
    tmp___10 = p;
#line 628
    p = p + 1;
#line 628
    tmp___11 = comp_dn;
#line 628
    comp_dn = comp_dn + 1;
#line 628
    *tmp___10 = *tmp___11;
#line 627
    i = i + 1;
  }
  while_break___0: /* CIL Label */ ;
  }
#line 630
  len = len + comp_size;
  {
#line 632
  while (1) {
    while_continue___1: /* CIL Label */ ;
#line 632
    t_s = (u_int16_t )24;
#line 632
    t_cp = p;
#line 632
    tmp___12 = t_cp;
#line 632
    t_cp = t_cp + 1;
#line 632
    __cil_tmp117 = (int )t_s;
#line 632
    __cil_tmp118 = __cil_tmp117 >> 8;
#line 632
    *tmp___12 = (u_char )__cil_tmp118;
#line 632
    *t_cp = (u_char )t_s;
#line 632
    p = p + 2;
#line 632
    goto while_break___1;
  }
  while_break___1: /* CIL Label */ ;
  }
#line 633
  p = p + 2;
  {
#line 635
  while (1) {
    while_continue___2: /* CIL Label */ ;
#line 635
    t_s___0 = (u_int16_t )1;
#line 635
    t_cp___0 = p;
#line 635
    tmp___13 = t_cp___0;
#line 635
    t_cp___0 = t_cp___0 + 1;
#line 635
    __cil_tmp119 = (int )t_s___0;
#line 635
    __cil_tmp120 = __cil_tmp119 >> 8;
#line 635
    *tmp___13 = (u_char )__cil_tmp120;
#line 635
    *t_cp___0 = (u_char )t_s___0;
#line 635
    p = p + 2;
#line 635
    goto while_break___2;
  }
  while_break___2: /* CIL Label */ ;
  }
#line 636
  p = p + 2;
  {
#line 638
  while (1) {
    while_continue___3: /* CIL Label */ ;
#line 638
    t_l = (u_int32_t )255;
#line 638
    t_cp___1 = p;
#line 638
    tmp___14 = t_cp___1;
#line 638
    t_cp___1 = t_cp___1 + 1;
#line 638
    __cil_tmp121 = t_l >> 24;
#line 638
    *tmp___14 = (u_char )__cil_tmp121;
#line 638
    tmp___15 = t_cp___1;
#line 638
    t_cp___1 = t_cp___1 + 1;
#line 638
    __cil_tmp122 = t_l >> 16;
#line 638
    *tmp___15 = (u_char )__cil_tmp122;
#line 638
    tmp___16 = t_cp___1;
#line 638
    t_cp___1 = t_cp___1 + 1;
#line 638
    __cil_tmp123 = t_l >> 8;
#line 638
    *tmp___16 = (u_char )__cil_tmp123;
#line 638
    *t_cp___1 = (u_char )t_l;
#line 638
    p = p + 4;
#line 638
    goto while_break___3;
  }
  while_break___3: /* CIL Label */ ;
  }
#line 639
  p = p + 4;
  {
#line 641
  while (1) {
    while_continue___4: /* CIL Label */ ;
#line 641
    t_s___1 = (u_int16_t )30;
#line 641
    t_cp___2 = p;
#line 641
    tmp___17 = t_cp___2;
#line 641
    t_cp___2 = t_cp___2 + 1;
#line 641
    __cil_tmp124 = (int )t_s___1;
#line 641
    __cil_tmp125 = __cil_tmp124 >> 8;
#line 641
    *tmp___17 = (u_char )__cil_tmp125;
#line 641
    *t_cp___2 = (u_char )t_s___1;
#line 641
    p = p + 2;
#line 641
    goto while_break___4;
  }
  while_break___4: /* CIL Label */ ;
  }
#line 644
  p = p + 2;
#line 646
  len = len + 10;
  {
#line 648
  while (1) {
    while_continue___5: /* CIL Label */ ;
#line 648
    t_s___2 = (u_int16_t )15;
#line 648
    t_cp___3 = p;
#line 648
    tmp___18 = t_cp___3;
#line 648
    t_cp___3 = t_cp___3 + 1;
#line 648
    __cil_tmp126 = (int )t_s___2;
#line 648
    __cil_tmp127 = __cil_tmp126 >> 8;
#line 648
    *tmp___18 = (u_char )__cil_tmp127;
#line 648
    *t_cp___3 = (u_char )t_s___2;
#line 648
    p = p + 2;
#line 648
    goto while_break___5;
  }
  while_break___5: /* CIL Label */ ;
  }
#line 649
  p = p + 2;
  {
#line 651
  while (1) {
    while_continue___6: /* CIL Label */ ;
#line 651
    t_s___3 = (u_int16_t )512;
#line 651
    t_cp___4 = p;
#line 651
    tmp___19 = t_cp___4;
#line 651
    t_cp___4 = t_cp___4 + 1;
#line 651
    __cil_tmp128 = (int )t_s___3;
#line 651
    __cil_tmp129 = __cil_tmp128 >> 8;
#line 651
    *tmp___19 = (u_char )__cil_tmp129;
#line 651
    *t_cp___4 = (u_char )t_s___3;
#line 651
    p = p + 2;
#line 651
    goto while_break___6;
  }
  while_break___6: /* CIL Label */ ;
  }
#line 652
  p = p + 2;
  {
#line 654
  while (1) {
    while_continue___7: /* CIL Label */ ;
#line 654
    t_l___0 = (u_int32_t )255;
#line 654
    t_cp___5 = p;
#line 654
    tmp___20 = t_cp___5;
#line 654
    t_cp___5 = t_cp___5 + 1;
#line 654
    __cil_tmp130 = t_l___0 >> 24;
#line 654
    *tmp___20 = (u_char )__cil_tmp130;
#line 654
    tmp___21 = t_cp___5;
#line 654
    t_cp___5 = t_cp___5 + 1;
#line 654
    __cil_tmp131 = t_l___0 >> 16;
#line 654
    *tmp___21 = (u_char )__cil_tmp131;
#line 654
    tmp___22 = t_cp___5;
#line 654
    t_cp___5 = t_cp___5 + 1;
#line 654
    __cil_tmp132 = t_l___0 >> 8;
#line 654
    *tmp___22 = (u_char )__cil_tmp132;
#line 654
    *t_cp___5 = (u_char )t_l___0;
#line 654
    p = p + 4;
#line 654
    goto while_break___7;
  }
  while_break___7: /* CIL Label */ ;
  }
  {
#line 655
  p = p + 4;
#line 657
  __cil_tmp133 = (void *)0;
#line 657
  __cil_tmp134 = (time_t *)__cil_tmp133;
#line 657
  tmp___23 = time(__cil_tmp134);
#line 657
  now = (u_long )tmp___23;
#line 659
  __cil_tmp135 = (char const   * __restrict  )"Signing at = %d\n";
#line 659
  printf(__cil_tmp135, now);
  }
  {
#line 660
  while (1) {
    while_continue___8: /* CIL Label */ ;
#line 660
    __cil_tmp136 = now + 20000UL;
#line 660
    t_l___1 = (u_int32_t )__cil_tmp136;
#line 660
    t_cp___6 = p;
#line 660
    tmp___24 = t_cp___6;
#line 660
    t_cp___6 = t_cp___6 + 1;
#line 660
    __cil_tmp137 = t_l___1 >> 24;
#line 660
    *tmp___24 = (u_char )__cil_tmp137;
#line 660
    tmp___25 = t_cp___6;
#line 660
    t_cp___6 = t_cp___6 + 1;
#line 660
    __cil_tmp138 = t_l___1 >> 16;
#line 660
    *tmp___25 = (u_char )__cil_tmp138;
#line 660
    tmp___26 = t_cp___6;
#line 660
    t_cp___6 = t_cp___6 + 1;
#line 660
    __cil_tmp139 = t_l___1 >> 8;
#line 660
    *tmp___26 = (u_char )__cil_tmp139;
#line 660
    *t_cp___6 = (u_char )t_l___1;
#line 660
    p = p + 4;
#line 660
    goto while_break___8;
  }
  while_break___8: /* CIL Label */ ;
  }
#line 661
  p = p + 4;
  {
#line 662
  while (1) {
    while_continue___9: /* CIL Label */ ;
#line 662
    t_l___2 = (u_int32_t )now;
#line 662
    t_cp___7 = p;
#line 662
    tmp___27 = t_cp___7;
#line 662
    t_cp___7 = t_cp___7 + 1;
#line 662
    __cil_tmp140 = t_l___2 >> 24;
#line 662
    *tmp___27 = (u_char )__cil_tmp140;
#line 662
    tmp___28 = t_cp___7;
#line 662
    t_cp___7 = t_cp___7 + 1;
#line 662
    __cil_tmp141 = t_l___2 >> 16;
#line 662
    *tmp___28 = (u_char )__cil_tmp141;
#line 662
    tmp___29 = t_cp___7;
#line 662
    t_cp___7 = t_cp___7 + 1;
#line 662
    __cil_tmp142 = t_l___2 >> 8;
#line 662
    *tmp___29 = (u_char )__cil_tmp142;
#line 662
    *t_cp___7 = (u_char )t_l___2;
#line 662
    p = p + 4;
#line 662
    goto while_break___9;
  }
  while_break___9: /* CIL Label */ ;
  }
#line 663
  p = p + 4;
  {
#line 665
  while (1) {
    while_continue___10: /* CIL Label */ ;
#line 665
    t_s___4 = (u_int16_t )100;
#line 665
    t_cp___8 = p;
#line 665
    tmp___30 = t_cp___8;
#line 665
    t_cp___8 = t_cp___8 + 1;
#line 665
    __cil_tmp143 = (int )t_s___4;
#line 665
    __cil_tmp144 = __cil_tmp143 >> 8;
#line 665
    *tmp___30 = (u_char )__cil_tmp144;
#line 665
    *t_cp___8 = (u_char )t_s___4;
#line 665
    p = p + 2;
#line 665
    goto while_break___10;
  }
  while_break___10: /* CIL Label */ ;
  }
  {
#line 666
  p = p + 2;
#line 668
  len = len + 18;
#line 670
  __cil_tmp145 = 0 * 1UL;
#line 670
  __cil_tmp146 = (unsigned long )(exp_dn2) + __cil_tmp145;
#line 670
  __cil_tmp147 = (char *)__cil_tmp146;
#line 670
  __cil_tmp148 = (char * __restrict  )__cil_tmp147;
#line 670
  __cil_tmp149 = (char const   * __restrict  )"sls.lcs.mit.edu";
#line 670
  strcpy(__cil_tmp148, __cil_tmp149);
#line 672
  tmp___31 = dnptrs2;
#line 672
  dnptrs2 = dnptrs2 + 1;
#line 672
  __cil_tmp150 = 0 * 1UL;
#line 672
  __cil_tmp151 = (unsigned long )(exp_dn2) + __cil_tmp150;
#line 672
  __cil_tmp152 = (char *)__cil_tmp151;
#line 672
  *tmp___31 = (u_char *)__cil_tmp152;
#line 673
  tmp___32 = dnptrs2;
#line 673
  dnptrs2 = dnptrs2 - 1;
#line 673
  __cil_tmp153 = (void *)0;
#line 673
  *tmp___32 = (u_char *)__cil_tmp153;
#line 674
  __cil_tmp154 = (void *)0;
#line 674
  lastdnptr = (u_char **)__cil_tmp154;
#line 676
  __cil_tmp155 = (char const   * __restrict  )"Calling dn_comp..\n";
#line 676
  printf(__cil_tmp155);
#line 677
  __cil_tmp156 = 0 * 1UL;
#line 677
  __cil_tmp157 = (unsigned long )(exp_dn2) + __cil_tmp156;
#line 677
  __cil_tmp158 = (char *)__cil_tmp157;
#line 677
  __cil_tmp159 = (char const   *)__cil_tmp158;
#line 677
  comp_size = __dn_comp(__cil_tmp159, comp_dn2, 200, dnptrs2, lastdnptr);
#line 678
  __cil_tmp160 = 0 * 1UL;
#line 678
  __cil_tmp161 = (unsigned long )(exp_dn2) + __cil_tmp160;
#line 678
  __cil_tmp162 = (char *)__cil_tmp161;
#line 678
  __cil_tmp163 = (char const   *)__cil_tmp162;
#line 678
  tmp___33 = strlen(__cil_tmp163);
#line 678
  __cil_tmp164 = (char const   * __restrict  )"uncomp_size = %d\n";
#line 678
  printf(__cil_tmp164, tmp___33);
#line 679
  __cil_tmp165 = (char const   * __restrict  )"comp_size = %d\n";
#line 679
  printf(__cil_tmp165, comp_size);
#line 680
  __cil_tmp166 = (char const   * __restrict  )"exp_dn2 = %s, comp_dn2 = %s\n";
#line 680
  __cil_tmp167 = 0 * 1UL;
#line 680
  __cil_tmp168 = (unsigned long )(exp_dn2) + __cil_tmp167;
#line 680
  __cil_tmp169 = (char *)__cil_tmp168;
#line 680
  __cil_tmp170 = (char *)comp_dn2;
#line 680
  printf(__cil_tmp166, __cil_tmp169, __cil_tmp170);
#line 682
  len = len + comp_size;
#line 684
  i = 0;
  }
  {
#line 684
  while (1) {
    while_continue___11: /* CIL Label */ ;
#line 684
    if (i < comp_size) {

    } else {
#line 684
      goto while_break___11;
    }
#line 685
    tmp___34 = p;
#line 685
    p = p + 1;
#line 685
    tmp___35 = comp_dn2;
#line 685
    comp_dn2 = comp_dn2 + 1;
#line 685
    *tmp___34 = *tmp___35;
#line 684
    i = i + 1;
  }
  while_break___11: /* CIL Label */ ;
  }
#line 687
  i = 0;
  {
#line 687
  while (1) {
    while_continue___12: /* CIL Label */ ;
#line 687
    if (i < 11) {

    } else {
#line 687
      goto while_break___12;
    }
    {
#line 689
    while (1) {
      while_continue___13: /* CIL Label */ ;
#line 689
      t_l___3 = (u_int32_t )123;
#line 689
      t_cp___9 = p;
#line 689
      tmp___36 = t_cp___9;
#line 689
      t_cp___9 = t_cp___9 + 1;
#line 689
      __cil_tmp171 = t_l___3 >> 24;
#line 689
      *tmp___36 = (u_char )__cil_tmp171;
#line 689
      tmp___37 = t_cp___9;
#line 689
      t_cp___9 = t_cp___9 + 1;
#line 689
      __cil_tmp172 = t_l___3 >> 16;
#line 689
      *tmp___37 = (u_char )__cil_tmp172;
#line 689
      tmp___38 = t_cp___9;
#line 689
      t_cp___9 = t_cp___9 + 1;
#line 689
      __cil_tmp173 = t_l___3 >> 8;
#line 689
      *tmp___38 = (u_char )__cil_tmp173;
#line 689
      *t_cp___9 = (u_char )t_l___3;
#line 689
      p = p + 4;
#line 689
      goto while_break___13;
    }
    while_break___13: /* CIL Label */ ;
    }
#line 690
    p = p + 4;
#line 691
    len = len + 4;
#line 687
    i = i + 1;
  }
  while_break___12: /* CIL Label */ ;
  }
#line 694
  return (p - buf);
}
}
#line 700 "sig-ok.c"
int main(void) 
{ int msglen ;
  int ret ;
  u_char *dp ;
  u_char *name ;
  void *tmp ;
  u_char *msg ;
  void *tmp___0 ;
  unsigned long __cil_tmp8 ;
  unsigned long __cil_tmp9 ;
  char const   * __restrict  __cil_tmp10 ;
  char const   * __restrict  __cil_tmp11 ;
  char const   * __restrict  __cil_tmp12 ;
  char const   * __restrict  __cil_tmp13 ;

  {
  {
#line 704
  __cil_tmp8 = 100UL * 1UL;
#line 704
  tmp = malloc(__cil_tmp8);
#line 704
  name = (u_char *)tmp;
#line 705
  __cil_tmp9 = 1000UL * 1UL;
#line 705
  tmp___0 = malloc(__cil_tmp9);
#line 705
  msg = (u_char *)tmp___0;
#line 707
  __cil_tmp10 = (char const   * __restrict  )"Calling create_msg:\n";
#line 707
  printf(__cil_tmp10);
#line 708
  msglen = createSig(msg);
#line 710
  __cil_tmp11 = (char const   * __restrict  )"msglen = %d\n";
#line 710
  printf(__cil_tmp11, msglen);
#line 712
  dp = msg + 12UL;
#line 714
  __cil_tmp12 = (char const   * __restrict  )"Calling rrextract!\n";
#line 714
  printf(__cil_tmp12);
#line 716
  __res_init();
#line 717
  ret = rrextract(msg, msglen, dp, name, 100);
#line 719
  __cil_tmp13 = (char const   * __restrict  )"rrextract returned %d\n";
#line 719
  printf(__cil_tmp13, ret);
  }
#line 721
  return (0);
}
}
