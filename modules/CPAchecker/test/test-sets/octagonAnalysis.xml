<?xml version="1.0"?>
<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.4//EN" "http://www.sosy-lab.org/benchexec/benchmark-1.4.dtd">
<benchmark tool="cpachecker" timelimit="500 s" hardtimelimit="550 s" memlimit="32 GB" cpuCores="2">
  <option name="-heap">2000M</option>
  <option name="-noout"/>
  <option name="-disable-java-assertions"/>

  <tasks name="Simple">
    <includesfile>../programs/benchmarks/Simple.set</includesfile>
    <propertyfile>../programs/benchmarks/Simple.prp</propertyfile>
    <option name="-setprop">cpa.predicate.handlePointerAliasing=false</option>
  </tasks>
  <tasks name="ControlFlow">
    <include>../programs/benchmarks/ntdrivers-simplified/*_false-unreach-call*.cil.c</include>
    <include>../programs/benchmarks/ntdrivers-simplified/*_true-unreach-call*.cil.c</include>
    <include>../programs/benchmarks/ssh-simplified/*_false-unreach-call*.cil.c</include>
    <include>../programs/benchmarks/ssh-simplified/*_true-unreach-call*.cil.c</include>
    <include>../programs/benchmarks/locks/*_false-unreach-call*.c</include>
    <include>../programs/benchmarks/locks/*_true-unreach-call*.c</include>
    <propertyfile>../programs/benchmarks/ControlFlow.prp</propertyfile>
  </tasks>
  <tasks name="ECA">
    <propertyfile>../programs/benchmarks/ECA.prp</propertyfile>
    <include>../programs/benchmarks/eca/Problem0*_false-unreach-call*.c</include>
    <include>../programs/benchmarks/eca/Problem0*_true-unreach-call*.c</include>
  </tasks>
  <tasks name="DeviceDrivers64">
    <includesfile>../programs/benchmarks/DeviceDriversLinux64.set</includesfile>
    <propertyfile>../programs/benchmarks/DeviceDriversLinux64.prp</propertyfile>
    <option name="-64"/>
  </tasks>
  <tasks name="Loops">
    <includesfile>../programs/benchmarks/Loops.set</includesfile>
    <propertyfile>../programs/benchmarks/Loops.prp</propertyfile>
  </tasks>
  <tasks name="ProductLines">
    <includesfile>../programs/benchmarks/ProductLines.set</includesfile>
    <propertyfile>../programs/benchmarks/ProductLines.prp</propertyfile>
  </tasks>
  <tasks name="Sequentialized">
    <include>../programs/benchmarks/systemc/*_false-unreach-call*.cil.c</include>
    <include>../programs/benchmarks/systemc/*_true-unreach-call*.cil.c</include>
    <propertyfile>../programs/benchmarks/Sequentialized.prp</propertyfile>
  </tasks>

<!-- Analyses with a single run -->

 <rundefinition name="apronAnalysis-mergeSep">
    <option name="-apronAnalysis"/>
 </rundefinition>
 <rundefinition name="octagonAnalysis-mergeSep">
    <option name="-octagonAnalysis"/>
 </rundefinition>
 <rundefinition name="octagonAnalysis-mergeJoin">
    <option name="-octagonAnalysis-mergeJoin-cexCheck"/>
    <option name="-setprop">analysis.checkCounterexamples=false</option>
 </rundefinition>
 <rundefinition name="octagonAnalysis-mergeJoin-cexCheck">
    <option name="-octagonAnalysis-mergeJoin-cexCheck"/>
 </rundefinition>
 <rundefinition name="octagonAnalysis-mergeJoinOnlyBlocks-cexCheck">
    <option name="-octagonAnalysis-mergeJoin-cexCheck"/>
    <option name="-setprop">cpa.octagon.mergeop.onlyMergeAtLoopHeads=true</option>
 </rundefinition>
 <rundefinition name="octagonAnalysis-mergeWidening">
    <option name="-octagonAnalysis-mergeWidening-cexCheck"/>
    <option name="-setprop">analysis.checkCounterexamples=false</option>
 </rundefinition>
 <rundefinition name="octagonAnalysis-mergeWidening-cexCheck">
    <option name="-octagonAnalysis-mergeWidening-cexCheck"/>
 </rundefinition>
 <rundefinition name="octagonAnalysis-mergeWideningOnlyBlocks-cexCheck">
    <option name="-octagonAnalysis-mergeWidening-cexCheck"/>
    <option name="-setprop">cpa.octagon.mergeop.onlyMergeAtLoopHeads=true</option>
 </rundefinition>
  <rundefinition name="octagonAnalysis-refiner">
    <option name="-octagonAnalysis-refiner"/>
 </rundefinition>

<!-- Analyses with a sequential combination of runs -->
 <rundefinition name="octagonAnalysis-restart-int-refiner-widening-100_400">
    <option name="-octagonAnalysis-restart-int"/>
    <option name="-setprop">restartAlgorithm.configFiles=config/octagonAnalysis-mergeWidening-cexCheck-restart-int-100.properties,config/octagonAnalysis-refiner-restart-int.properties</option>
 </rundefinition>
 <rundefinition name="octagonAnalysis-restart-int-refiner-widening-100_350_50">
    <option name="-octagonAnalysis-restart-int"/>
    <option name="-setprop">restartAlgorithm.configFiles=config/octagonAnalysis-mergeWidening-cexCheck-restart-int-100.properties,config/octagonAnalysis-refiner-restart-int-350.properties,config/octagonAnalysis.properties</option>
 </rundefinition>
 <rundefinition name="octagonAnalysis-restart-int-refiner-join">
    <option name="-octagonAnalysis-restart-int"/>
    <option name="-setprop">restartAlgorithm.configFiles=config/octagonAnalysis-mergeJoin-cexCheck.properties,config/octagonAnalysis-refiner-restart-int.properties</option>
 </rundefinition>
 <rundefinition name="octagonanalysis-restart-int-refiner-widening-250_250">
   <option name="-octagonAnalysis-restart-int"/>
 </rundefinition>

<!-- Analyses which were compared to the octagon ones in Bachelor thesis of Thomas Stieglmaier -->
<!--
 <rundefinition name="valueAnalysis-noRefiner-noCBMC">
    <option name="-heap">29000M</option>
    <option name="-valueAnalysis-NoRefiner"/>
    <option name="-setprop">analysis.checkCounterexamples=false</option>
 </rundefinition>
 <rundefinition name="valueAnalysis-ItpRefiner-noCBMC">
    <option name="-heap">29000M</option>
    <option name="-valueAnalysis-ItpRefiner"/>
    <option name="-setprop">analysis.checkCounterexamples=false</option>
 </rundefinition>
 <rundefinition name="predicateAnalysis">
    <option name="-heap">25000M</option>
    <option name="-predicateAnalysis"/>
    <option name="-setprop">analysis.checkCounterexamples=false</option>
 </rundefinition>
-->
</benchmark>
