#include ../includes/predicateAnalysis-ABEl.properties
#include ../includes/predicateAnalysis-bitprecise.properties

# reset specifcation we will get it from outside
specification =

limits.time.cpu = 100s

# witness export seems to be broken in combination with
# global refinement and a bounded analysis
counterexample.export.exportWitness=false


# we do only use the precision of this analysis for later generation of invariants
# continueing after an infeasible error is not necessary
analysis.checkCounterexamples=false
counterexample.continueAfterInfeasibleError = false
cpa.reportFalseAsUnknown = true


CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.assumptions.storage.AssumptionStorageCPA, cpa.bounds.BoundsCPA, cpa.functionpointer.FunctionPointerCPA,  cpa.predicate.PredicateCPA

# don't break on target states we use a global refiner
[cpa.automaton]
breakOnTargetState = 0

[cpa.bounds]
maxLoopIterations = 1
maxLoopIterationsUpperBound = 5
maxLoopIterationAdjusterFactory = INCREMENT

# loop bounds adjustment
[analysis.algorithm]
conditionAdjustment = true

# export precision for next analysis
[cpa.predicate]
ignoreIrrelevantFields = false
ignoreIrrelevantVariables = false
refinement.global.stopAfterNRefinements = 1
predmap.export = true
predmap.file = precisionFor2nd.txt

[cegar]
refiner = cpa.predicate.PredicateGlobalRefiner
globalRefinement = true
