# ----------------------------------------------------------------------
# This configuration file enables k-Induction
# ----------------------------------------------------------------------

#include ../bmc-induction-noAI-bitprecise.properties

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.predicate.PredicateCPA, cpa.assumptions.storage.AssumptionStorageCPA, cpa.bounds.BoundsCPA, cpa.programcounter.ProgramCounterCPA, cpa.value.ValueAnalysisCPA, cpa.pointer2.PointerCPA

# The specification to check in SV-COMP'17
specification = ../specification/sv-comp-reachability.spc

# The file to which the witness is written (required by competition).
counterexample.export.graphml = violation-witness.graphml
bmc.invariantsExport = correctness-witness.graphml

output.disable=true
statistics.memory=false

# Multi edges are not important for our efficiency,
# but prevent precise witnesses and concurrency analysis
cpa.composite.aggregateBasicBlocks = false

# Simplified CFA is bad for witnesses
cfa.simplifyCfa = false

# CFA branch swapping is bad for witnesses
cfa.allowBranchSwapping = false

# Do not export constant values for pointers
# if an external tool is supposed to check the witness:
# the concrete value we use might not make sense in a real setting
counterexample.export.assumptions.includeConstantsForPointers = false

# Tell all analyses to skip (non-explicit) recursion
analysis.summaryEdges = true
cpa.callstack.skipVoidRecursion = true
cpa.callstack.skipFunctionPointerRecursion = true

# Enable float handling in predicate analysis
cpa.predicate.encodeFloatAs = FLOAT
# Enable bit-accurate predicate analysis
cpa.predicate.encodeBitvectorAs = BITVECTOR
# Only mathsat supports all required solver features
solver.solver=MATHSAT5

# malloc never returns null according to SV-Comp rules
cpa.predicate.memoryAllocationsAlwaysSucceed = true

# Our kI-kI heuristic is not that great anyway
# and would require a solver that supports concurrent usage
bmc.addInvariantsByInduction=false

# Check counterexamples
analysis.checkCounterexamples=true
counterexample.checker=CBMC

# This is the configuration used when verifying the overflow property;
# everything in this file is then ignored.
overflow.config = ../sv-comp17--k-induction-overflow.properties
