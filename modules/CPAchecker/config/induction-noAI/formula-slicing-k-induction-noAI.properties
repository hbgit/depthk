#include ../bmc.properties

# NOTE: PredicateCPA is used with no abstractions, hence it effectively performs
# symbolic execution.
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.predicate.PredicateCPA, cpa.assumptions.storage.AssumptionStorageCPA, cpa.bounds.BoundsCPA, cpa.programcounter.ProgramCounterCPA, cpa.value.ValueAnalysisCPA

[cpa.bounds]
maxLoopIterationsUpperBound = 0
maxLoopIterations = 1
maxLoopIterationAdjusterFactory = INCREMENT

[bmc]
induction = true
addInvariantsByInduction = false

[solver]
solver = smtinterpol

[cpa.predicate]
encodeFloatAs = RATIONAL

[cpa.callstack]
depth=1

