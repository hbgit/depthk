# ------------------------------------------------------------------
# This configuration file uses value analysis of local integer
# variables in a model-checking configuration.
# Certain variables (__SELECTED_FEATURE_*) are instead tracked with BDDs (with the BDDCPA).
# Found errors are cross-checked by CBMC.
# ------------------------------------------------------------------

# ARGCPA is needed for counterexample analysis
cpa = cpa.arg.ARGCPA

ARGCPA.cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.bdd.BDDCPA, cpa.value.ValueAnalysisCPA

# analysis.checkCounterexamples = true #unused (implied by next line)
analysis.checkCounterexamplesWithBDDCPARestriction=true
cbmc.dumpCBMCfile = CBMC_counterexample.c

counterexample.continueAfterInfeasibleError = true
analysis.stopAfterError=false
# counterexample.continueAfterInfeasibleError = false

analysis.traversal.order = bfs
analysis.traversal.useReversePostorder = true
analysis.traversal.useCallstack = true

BDDCPA.precision.variableWhitelist = __SELECTED_FEATURE_(\w)*
ValueAnalysisCPA.precision.variableBlacklist = (\w)*__SELECTED_FEATURE_(\w)*
ValueAnalysisCPA.precision.trackBooleanVariables = true
ValueAnalysisCPA.precision.trackIntAddVariables = true
ValueAnalysisCPA.precision.trackIntEqualVariables = true
ValueAnalysisCPA.precision.trackVariablesBesidesEqAddBool = true

BDDCPA.precision.trackBooleanVariables = false
BDDCPA.precision.trackIntAddVariables = false
BDDCPA.precision.trackIntEqualVariables = false
BDDCPA.precision.trackVariablesBesidesEqAddBool = false

# this automaton defines which locations are the error locations
specification = specification/BDDCPAErrorLocation.spc, specification/ErrorLabel.spc, specification/TerminatingFunctions.spc
