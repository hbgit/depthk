# ARGCPA is needed for counterexample analysis
cpa                     = cpa.arg.ARGCPA
ARGCPA.cpa              = cpa.composite.CompositeCPA
CompositeCPA.cpas       = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.smg.SMGCPA, cpa.functionpointer.FunctionPointerCPA

specification = specification/cpalien-leaks.spc

cpa.smg.exportSMGwhen = interesting
cpa.smg.memoryErrors = true
cpa.smg.enableMallocFail = false
cpa.smg.unknownOnUndefined = false
cpa.smg.handleUnknownFunctions = strict
cpa.smg.runtimeCheck = FULL

analysis.traversal.order                  = dfs
analysis.traversal.useReversePostorder    = false
analysis.traversal.useCallstack           = false

analysis.summaryEdges       = true
cpa.callstack.skipRecursion = true

memorysafety.config = smg.properties

# simplified CFA is bad for witnesses
cfa.simplifyCfa = false

# CFA branch swapping is bad for witnesses
cfa.allowBranchSwapping = false

# Memory allocation functions
cpa.smg.memoryAllocationFunctions = malloc,__kmalloc,kmalloc,kzalloc,kzalloc_node,ldv_zalloc,ldv_malloc

# Array allocation functions
cpa.smg.arrayAllocationFunctions = calloc,kmalloc_array,kcalloc

# Allocation functions which set memory to zero
cpa.smg.zeroingMemoryAllocation = calloc,kzalloc,kcalloc,kzalloc_node,ldv_zalloc

# Deallocation functions
cpa.smg.deallocationFunctions = free,kfree,kfree_const