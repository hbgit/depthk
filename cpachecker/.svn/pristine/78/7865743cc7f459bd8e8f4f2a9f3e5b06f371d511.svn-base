/* Generated by CIL v. 1.3.7 */
/* print_CIL_Input is true */

#line 44 "../versisec/NetBSD-libc/progs/../glob.h"
typedef int Char;
#line 60
extern int __VERIFIER_nondet_int(void) ;
#line 71 "/usr/include/assert.h"
extern  __attribute__((__nothrow__, __noreturn__)) void __assert_fail(char const   *__assertion ,
                                                                      char const   *__file ,
                                                                      unsigned int __line ,
                                                                      char const   *__function ) ;
#line 4 "../versisec/NetBSD-libc/progs/NetBSD-libcCVE-2006-6652glob2_anyMeta_int_bad.c"
int glob2(Char *pathbuf , Char *pathend , Char *pathlim , Char *pattern ) 
{ int i ;
  int anymeta ;
  Char tmp ;
  int tmp___0 ;
  Char *__cil_tmp9 ;
  Char __cil_tmp10 ;
  Char *__cil_tmp11 ;
  Char __cil_tmp12 ;
  Char *__cil_tmp13 ;
  Char __cil_tmp14 ;
  int __cil_tmp15 ;
  unsigned long __cil_tmp16 ;
  Char *__cil_tmp17 ;
  unsigned long __cil_tmp18 ;
  Char *__cil_tmp19 ;
  unsigned long __cil_tmp20 ;
  Char *__cil_tmp21 ;
  Char *__cil_tmp22 ;
  unsigned long __cil_tmp23 ;
  unsigned long __cil_tmp24 ;
  Char *__cil_tmp25 ;

  {
#line 10
  anymeta = 0;
  {
#line 10
  while (1) {
    while_0_continue: /* CIL Label */ ;
#line 15
    i = 0;
    {
#line 16
    while (1) {
      while_1_continue: /* CIL Label */ ;
      {
#line 16
      __cil_tmp9 = pattern + i;
#line 16
      __cil_tmp10 = *__cil_tmp9;
#line 16
      if (__cil_tmp10 != 0) {
        {
#line 16
        __cil_tmp11 = pattern + i;
#line 16
        __cil_tmp12 = *__cil_tmp11;
#line 16
        if (__cil_tmp12 != 47) {

        } else {
          goto while_1_break;
        }
        }
      } else {
        goto while_1_break;
      }
      }
      {
#line 17
      __cil_tmp13 = pattern + i;
#line 17
      __cil_tmp14 = *__cil_tmp13;
#line 17
      __cil_tmp15 = __cil_tmp14 & 128;
#line 17
      if (__cil_tmp15 != 0) {
#line 18
        anymeta = 1;
      } else {

      }
      }
      {
#line 19
      __cil_tmp16 = (unsigned long )pathlim;
#line 19
      __cil_tmp17 = pathend + i;
#line 19
      __cil_tmp18 = (unsigned long )__cil_tmp17;
#line 19
      if (__cil_tmp18 >= __cil_tmp16) {
#line 20
        return (1);
      } else {

      }
      }
#line 21
      __cil_tmp19 = pattern + i;
#line 21
      tmp = *__cil_tmp19;
      {
#line 23
      __cil_tmp20 = 8UL / 4UL;
#line 23
      __cil_tmp21 = pathbuf + __cil_tmp20;
#line 23
      __cil_tmp22 = __cil_tmp21 - 1;
#line 23
      __cil_tmp23 = (unsigned long )__cil_tmp22;
#line 23
      __cil_tmp24 = (unsigned long )pathlim;
#line 23
      if (__cil_tmp24 >= __cil_tmp23) {

      } else {
        {
#line 23
        __assert_fail("pathlim >= pathbuf + sizeof(pathbuf)/sizeof(*pathbuf) -1",
                      "../versisec/NetBSD-libc/progs/NetBSD-libcCVE-2006-6652glob2_anyMeta_int_bad.c",
                      23U, "glob2");
        }
      }
      }
#line 25
      __cil_tmp25 = pathend + i;
#line 25
      *__cil_tmp25 = tmp;
#line 26
      i = i + 1;
    }
    while_1_break: /* CIL Label */ ;
    }
    {
#line 29
    tmp___0 = __VERIFIER_nondet_int();
    }
#line 29
    if (tmp___0) {
#line 30
      return (0);
    } else {

    }
  }
  while_0_break: /* CIL Label */ ;
  }
}
}
#line 36 "../versisec/NetBSD-libc/progs/NetBSD-libcCVE-2006-6652glob2_anyMeta_int_bad.c"
int main(void) 
{ Char *buf ;
  Char *pattern ;
  Char *bound ;
  Char A[3] ;
  Char B[7] ;
  unsigned long __cil_tmp6 ;
  unsigned long __cil_tmp7 ;
  unsigned long __cil_tmp8 ;
  unsigned long __cil_tmp9 ;
  unsigned long __cil_tmp10 ;
  unsigned long __cil_tmp11 ;
  Char *__cil_tmp12 ;
  Char *__cil_tmp13 ;

  {
  {
#line 45
  __cil_tmp6 = 0 * 4UL;
#line 45
  __cil_tmp7 = (unsigned long )(A) + __cil_tmp6;
#line 45
  buf = (Char *)__cil_tmp7;
#line 46
  __cil_tmp8 = 0 * 4UL;
#line 46
  __cil_tmp9 = (unsigned long )(B) + __cil_tmp8;
#line 46
  pattern = (Char *)__cil_tmp9;
#line 48
  __cil_tmp10 = 0 * 4UL;
#line 48
  __cil_tmp11 = (unsigned long )(A) + __cil_tmp10;
#line 48
  __cil_tmp12 = (Char *)__cil_tmp11;
#line 48
  __cil_tmp13 = __cil_tmp12 + 12UL;
#line 48
  bound = __cil_tmp13 - 1;
#line 50
  glob2(buf, buf, bound, pattern);
  }
#line 52
  return (0);
}
}
