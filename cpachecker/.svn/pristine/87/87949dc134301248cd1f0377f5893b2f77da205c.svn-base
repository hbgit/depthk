/* Generated by CIL v. 1.3.7 */
/* print_CIL_Input is true */

#line 14 "../versisec/bind/progs2/../lib/stubs.h"
typedef int size_t;
#line 25 "../versisec/bind/progs2/../bind1.h"
typedef char u_char;
#line 26 "../versisec/bind/progs2/../bind1.h"
typedef short int16_t;
#line 27 "../versisec/bind/progs2/../bind1.h"
typedef int time_t;
#line 28 "../versisec/bind/progs2/../bind1.h"
typedef int u_int;
#line 32 "../versisec/bind/progs2/../bind1.h"
struct databuf {
   struct databuf *d_next ;
   int16_t d_type ;
   u_char d_data[sizeof(char *)] ;
   int16_t d_class ;
   int d_flags ;
   int16_t d_zone ;
};
#line 41
struct hashbuf;
#line 41 "../versisec/bind/progs2/../bind1.h"
struct namebuf {
   u_int n_hashval ;
   struct namebuf *n_next ;
   struct databuf *n_data ;
   struct namebuf *n_parent ;
   struct hashbuf *n_hash ;
   char _n_name[sizeof(void *)] ;
};
#line 50 "../versisec/bind/progs2/../bind1.h"
struct timeval {
   time_t tv_sec ;
};
#line 68 "../versisec/bind/progs2/../bind1.h"
struct qinfo {
   struct databuf *q_usedns[16] ;
   u_char q_naddr ;
   u_char q_nusedns ;
};
#line 25 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
struct complaint {
   char const   *tag1 ;
   char const   *tag2 ;
   time_t expire ;
   struct complaint *next ;
};
#line 140
struct qserv;
#line 24 "../versisec/bind/progs2/../lib/stubs.h"
extern char *strncpy(char *dest , char const   *src , size_t n ) ;
#line 49
extern char *r_strncpy(char *dest , char const   *src , size_t n ) ;
#line 3 "../versisec/bind/progs2/../bind1.h"
int haveComplained(char const   *tag1 , char const   *tag2 ) ;
#line 4
char const   *p_type(int type ) ;
#line 71 "/usr/include/assert.h"
extern  __attribute__((__nothrow__, __noreturn__)) void __assert_fail(char const   *__assertion ,
                                                                      char const   *__file ,
                                                                      unsigned int __line ,
                                                                      char const   *__function ) ;
#line 4 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
extern int __VERIFIER_nondet_int() ;
#line 7 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
struct databuf dummybuf  ;
#line 8 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
struct namebuf dummyNameBuf  ;
#line 9 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
struct databuf dummybuf2  ;
#line 11 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
struct timeval tt  ;
#line 14 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
char const   *p_type(int type ) 
{ void *__cil_tmp2 ;

  {
  {
#line 16
  __cil_tmp2 = (void *)0;
#line 16
  return ((char const   *)__cil_tmp2);
  }
}
}
#line 30
int haveComplained(char const   *tag1 , char const   *tag2 ) ;
#line 30 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
static struct complaint *List  =    (struct complaint *)((void *)0);
#line 22 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
int haveComplained(char const   *tag1 , char const   *tag2 ) 
{ struct complaint *cur ;
  struct complaint *next ;
  struct complaint *prev ;
  int r ;
  struct complaint dummy ;
  void *__cil_tmp8 ;
  unsigned long __cil_tmp9 ;
  unsigned long __cil_tmp10 ;
  unsigned long __cil_tmp11 ;
  unsigned long __cil_tmp12 ;
  time_t __cil_tmp13 ;
  unsigned long __cil_tmp14 ;
  unsigned long __cil_tmp15 ;
  char const   *__cil_tmp16 ;
  unsigned long __cil_tmp17 ;
  unsigned long __cil_tmp18 ;
  unsigned long __cil_tmp19 ;
  unsigned long __cil_tmp20 ;
  char const   *__cil_tmp21 ;
  unsigned long __cil_tmp22 ;
  unsigned long __cil_tmp23 ;
  unsigned long __cil_tmp24 ;
  unsigned long __cil_tmp25 ;
  unsigned long __cil_tmp26 ;
  unsigned long __cil_tmp27 ;
  unsigned long __cil_tmp28 ;
  unsigned long __cil_tmp29 ;
  void *__cil_tmp30 ;
  unsigned long __cil_tmp31 ;
  unsigned long __cil_tmp32 ;

  {
#line 32
  r = 0;
#line 35
  cur = List;
#line 35
  __cil_tmp8 = (void *)0;
#line 35
  prev = (struct complaint *)__cil_tmp8;
  {
#line 35
  while (1) {
    while_0_continue: /* CIL Label */ ;
#line 35
    if (cur) {

    } else {
      goto while_0_break;
    }
#line 36
    __cil_tmp9 = (unsigned long )cur;
#line 36
    __cil_tmp10 = __cil_tmp9 + 24;
#line 36
    next = *((struct complaint **)__cil_tmp10);
    {
#line 37
    __cil_tmp11 = (unsigned long )cur;
#line 37
    __cil_tmp12 = __cil_tmp11 + 16;
#line 37
    __cil_tmp13 = *((time_t *)__cil_tmp12);
#line 37
    if (tt.tv_sec > __cil_tmp13) {
#line 38
      if (prev) {
#line 39
        __cil_tmp14 = (unsigned long )prev;
#line 39
        __cil_tmp15 = __cil_tmp14 + 24;
#line 39
        *((struct complaint **)__cil_tmp15) = next;
      } else {
#line 41
        List = next;
      }
#line 43
      cur = prev;
    } else {
      {
#line 44
      __cil_tmp16 = *((char const   **)cur);
#line 44
      __cil_tmp17 = (unsigned long )__cil_tmp16;
#line 44
      __cil_tmp18 = (unsigned long )tag1;
#line 44
      if (__cil_tmp18 == __cil_tmp17) {
        {
#line 44
        __cil_tmp19 = (unsigned long )cur;
#line 44
        __cil_tmp20 = __cil_tmp19 + 8;
#line 44
        __cil_tmp21 = *((char const   **)__cil_tmp20);
#line 44
        __cil_tmp22 = (unsigned long )__cil_tmp21;
#line 44
        __cil_tmp23 = (unsigned long )tag2;
#line 44
        if (__cil_tmp23 == __cil_tmp22) {
#line 45
          r = r + 1;
        } else {

        }
        }
      } else {

      }
      }
    }
    }
#line 35
    prev = cur;
#line 35
    cur = next;
  }
  while_0_break: /* CIL Label */ ;
  }
#line 48
  if (! r) {
#line 49
    cur = & dummy;
#line 50
    if (cur) {
#line 51
      *((char const   **)cur) = tag1;
#line 52
      __cil_tmp24 = (unsigned long )cur;
#line 52
      __cil_tmp25 = __cil_tmp24 + 8;
#line 52
      *((char const   **)__cil_tmp25) = tag2;
#line 53
      __cil_tmp26 = (unsigned long )cur;
#line 53
      __cil_tmp27 = __cil_tmp26 + 16;
#line 53
      *((time_t *)__cil_tmp27) = tt.tv_sec + 600;
#line 54
      __cil_tmp28 = (unsigned long )cur;
#line 54
      __cil_tmp29 = __cil_tmp28 + 24;
#line 54
      __cil_tmp30 = (void *)0;
#line 54
      *((struct complaint **)__cil_tmp29) = (struct complaint *)__cil_tmp30;
#line 55
      if (prev) {
#line 56
        __cil_tmp31 = (unsigned long )prev;
#line 56
        __cil_tmp32 = __cil_tmp31 + 24;
#line 56
        *((struct complaint **)__cil_tmp32) = cur;
      } else {
#line 58
        List = cur;
      }
    } else {

    }
  } else {

  }
#line 61
  return (r);
}
}
#line 65 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
static void nslookupComplain(char const   *sysloginfo , char const   *net_queryname ,
                             char const   *complaint , char const   *net_dname , struct databuf  const  *a_rr ,
                             struct databuf  const  *nsdp ) 
{ char queryname[6] ;
  char dname[6] ;
  char const   *a ;
  char const   *ns ;
  char const   *a_type ;
  int print_a ;
  char buf[2] ;
  int tmp ;
  unsigned long __cil_tmp15 ;
  unsigned long __cil_tmp16 ;
  char *__cil_tmp17 ;
  int __cil_tmp18 ;
  unsigned long __cil_tmp19 ;
  unsigned long __cil_tmp20 ;
  unsigned long __cil_tmp21 ;
  unsigned long __cil_tmp22 ;
  unsigned long __cil_tmp23 ;
  char *__cil_tmp24 ;
  int __cil_tmp25 ;
  unsigned long __cil_tmp26 ;
  unsigned long __cil_tmp27 ;
  unsigned long __cil_tmp28 ;
  unsigned long __cil_tmp29 ;
  unsigned long __cil_tmp30 ;
  unsigned long __cil_tmp31 ;
  unsigned long __cil_tmp32 ;
  char *__cil_tmp33 ;
  char const   *__cil_tmp34 ;
  void *__cil_tmp35 ;
  char *__cil_tmp36 ;
  unsigned long __cil_tmp37 ;
  unsigned long __cil_tmp38 ;
  int16_t __cil_tmp39 ;
  int __cil_tmp40 ;
  unsigned long __cil_tmp41 ;
  unsigned long __cil_tmp42 ;
  int16_t __cil_tmp43 ;
  int __cil_tmp44 ;
  unsigned long __cil_tmp45 ;
  unsigned long __cil_tmp46 ;
  char *__cil_tmp47 ;

  {
  {
#line 78
  __cil_tmp15 = 0 * 1UL;
#line 78
  __cil_tmp16 = (unsigned long )(queryname) + __cil_tmp15;
#line 78
  __cil_tmp17 = (char *)__cil_tmp16;
#line 78
  __cil_tmp18 = (int )6UL;
#line 78
  strncpy(__cil_tmp17, net_queryname, __cil_tmp18);
#line 79
  __cil_tmp19 = 6UL - 1UL;
#line 79
  __cil_tmp20 = __cil_tmp19 * 1UL;
#line 79
  __cil_tmp21 = (unsigned long )(queryname) + __cil_tmp20;
#line 79
  *((char *)__cil_tmp21) = (char)0;
#line 80
  __cil_tmp22 = 0 * 1UL;
#line 80
  __cil_tmp23 = (unsigned long )(dname) + __cil_tmp22;
#line 80
  __cil_tmp24 = (char *)__cil_tmp23;
#line 80
  __cil_tmp25 = (int )6UL;
#line 80
  strncpy(__cil_tmp24, net_dname, __cil_tmp25);
#line 81
  __cil_tmp26 = 6UL - 1UL;
#line 81
  __cil_tmp27 = __cil_tmp26 * 1UL;
#line 81
  __cil_tmp28 = (unsigned long )(dname) + __cil_tmp27;
#line 81
  *((char *)__cil_tmp28) = (char)0;
  }
#line 83
  if (sysloginfo) {
    {
#line 83
    __cil_tmp29 = 0 * 1UL;
#line 83
    __cil_tmp30 = (unsigned long )(queryname) + __cil_tmp29;
#line 83
    if ((char *)__cil_tmp30) {
      {
#line 83
      __cil_tmp31 = 0 * 1UL;
#line 83
      __cil_tmp32 = (unsigned long )(queryname) + __cil_tmp31;
#line 83
      __cil_tmp33 = (char *)__cil_tmp32;
#line 83
      __cil_tmp34 = (char const   *)__cil_tmp33;
#line 83
      tmp = haveComplained(__cil_tmp34, complaint);
      }
#line 83
      if (tmp) {

      } else {
        {
#line 86
        __cil_tmp35 = (void *)0;
#line 86
        __cil_tmp36 = (char *)__cil_tmp35;
#line 86
        ns = (char const   *)__cil_tmp36;
#line 86
        a = ns;
#line 87
        __cil_tmp37 = (unsigned long )a_rr;
#line 87
        __cil_tmp38 = __cil_tmp37 + 8;
#line 87
        __cil_tmp39 = *((int16_t const   *)__cil_tmp38);
#line 87
        __cil_tmp40 = (int const   )__cil_tmp39;
#line 87
        print_a = __cil_tmp40 == 1;
#line 88
        __cil_tmp41 = (unsigned long )a_rr;
#line 88
        __cil_tmp42 = __cil_tmp41 + 8;
#line 88
        __cil_tmp43 = *((int16_t const   *)__cil_tmp42);
#line 88
        __cil_tmp44 = (int )__cil_tmp43;
#line 88
        a_type = p_type(__cil_tmp44);
#line 93
        __cil_tmp45 = 0 * 1UL;
#line 93
        __cil_tmp46 = (unsigned long )(buf) + __cil_tmp45;
#line 93
        __cil_tmp47 = (char *)__cil_tmp46;
#line 93
        r_strncpy(__cil_tmp47, sysloginfo, 2);
        }
      }
    } else {

    }
    }
  } else {

  }
#line 95
  return;
}
}
#line 97 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
int match(struct databuf *dp , int class , int type ) 
{ unsigned long __cil_tmp4 ;
  unsigned long __cil_tmp5 ;
  int16_t __cil_tmp6 ;
  int __cil_tmp7 ;
  unsigned long __cil_tmp8 ;
  unsigned long __cil_tmp9 ;
  int16_t __cil_tmp10 ;
  int __cil_tmp11 ;

  {
  {
#line 102
  __cil_tmp4 = (unsigned long )dp;
#line 102
  __cil_tmp5 = __cil_tmp4 + 18;
#line 102
  __cil_tmp6 = *((int16_t *)__cil_tmp5);
#line 102
  __cil_tmp7 = (int )__cil_tmp6;
#line 102
  if (__cil_tmp7 != class) {
#line 102
    if (class != 255) {
#line 103
      return (0);
    } else {

    }
  } else {

  }
  }
  {
#line 104
  __cil_tmp8 = (unsigned long )dp;
#line 104
  __cil_tmp9 = __cil_tmp8 + 8;
#line 104
  __cil_tmp10 = *((int16_t *)__cil_tmp9);
#line 104
  __cil_tmp11 = (int )__cil_tmp10;
#line 104
  if (__cil_tmp11 != type) {
#line 104
    if (type != 255) {
#line 105
      return (0);
    } else {

    }
  } else {

  }
  }
#line 106
  return (1);
}
}
#line 110 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
struct namebuf *nlookup(char const   *name , struct hashbuf **htpp , char const   **fname ,
                        int insert ) 
{ unsigned long __cil_tmp5 ;
  unsigned long __cil_tmp6 ;
  unsigned long __cil_tmp7 ;

  {
#line 116
  __cil_tmp5 = (unsigned long )(& dummyNameBuf) + 16;
#line 116
  *((struct databuf **)__cil_tmp5) = & dummybuf2;
#line 119
  __cil_tmp6 = (unsigned long )(& dummybuf2) + 8;
#line 119
  *((int16_t *)__cil_tmp6) = (short)2;
#line 120
  __cil_tmp7 = (unsigned long )(& dummybuf2) + 24;
#line 120
  *((int16_t *)__cil_tmp7) = (short)1;
#line 121
  return (& dummyNameBuf);
}
}
#line 124 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
int findMyZone(struct namebuf *np , int class ) 
{ int tmp ;

  {
  {
#line 128
  tmp = __VERIFIER_nondet_int();
  }
#line 128
  return (tmp);
}
}
#line 183
int nslookup(struct databuf **nsp , struct qinfo *qp , char const   *syslogdname ,
             char const   *sysloginfo ) ;
#line 183 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
static char *complaint  =    (char *)"Glue A RR missing";
#line 132 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
int nslookup(struct databuf **nsp , struct qinfo *qp , char const   *syslogdname ,
             char const   *sysloginfo ) 
{ struct namebuf *np ;
  struct databuf *dp ;
  struct databuf *nsdp ;
  int n ;
  u_int i ;
  struct hashbuf *tmphtp ;
  char *dname ;
  char const   *fname ;
  int naddr ;
  int class ;
  int found_arr ;
  int potential_ns ;
  time_t curtime ;
  int tmp ;
  int tmp___0 ;
  unsigned long __cil_tmp22 ;
  unsigned long __cil_tmp23 ;
  u_char __cil_tmp24 ;
  long __cil_tmp25 ;
  void *__cil_tmp26 ;
  unsigned long __cil_tmp27 ;
  unsigned long __cil_tmp28 ;
  unsigned long __cil_tmp29 ;
  unsigned long __cil_tmp30 ;
  int16_t __cil_tmp31 ;
  unsigned long __cil_tmp32 ;
  unsigned long __cil_tmp33 ;
  unsigned long __cil_tmp34 ;
  unsigned long __cil_tmp35 ;
  unsigned long __cil_tmp36 ;
  unsigned long __cil_tmp37 ;
  u_char __cil_tmp38 ;
  u_int __cil_tmp39 ;
  unsigned long __cil_tmp40 ;
  unsigned long __cil_tmp41 ;
  unsigned long __cil_tmp42 ;
  unsigned long __cil_tmp43 ;
  unsigned long __cil_tmp44 ;
  struct databuf *__cil_tmp45 ;
  unsigned long __cil_tmp46 ;
  char const   *__cil_tmp47 ;
  void *__cil_tmp48 ;
  unsigned long __cil_tmp49 ;
  unsigned long __cil_tmp50 ;
  unsigned long __cil_tmp51 ;
  char const   **__cil_tmp52 ;
  char const   *__cil_tmp53 ;
  unsigned long __cil_tmp54 ;
  void *__cil_tmp55 ;
  unsigned long __cil_tmp56 ;
  unsigned long __cil_tmp57 ;
  void *__cil_tmp58 ;
  unsigned long __cil_tmp59 ;
  unsigned long __cil_tmp60 ;
  unsigned long __cil_tmp61 ;
  unsigned long __cil_tmp62 ;
  unsigned long __cil_tmp63 ;
  unsigned long __cil_tmp64 ;
  int16_t __cil_tmp65 ;
  int __cil_tmp66 ;
  char const   *__cil_tmp67 ;
  char const   *__cil_tmp68 ;
  struct databuf  const  *__cil_tmp69 ;
  struct databuf  const  *__cil_tmp70 ;

  {
#line 150
  potential_ns = 0;
#line 151
  __cil_tmp22 = (unsigned long )qp;
#line 151
  __cil_tmp23 = __cil_tmp22 + 128;
#line 151
  __cil_tmp24 = *((u_char *)__cil_tmp23);
#line 151
  n = (int )__cil_tmp24;
#line 152
  naddr = n;
#line 153
  __cil_tmp25 = (long )tt.tv_sec;
#line 153
  curtime = (int )__cil_tmp25;
  {
#line 154
  while (1) {
    while_1_continue: /* CIL Label */ ;
#line 155
    nsdp = *nsp;
#line 156
    nsp = nsp + 1;
    {
#line 157
    __cil_tmp26 = (void *)0;
#line 157
    __cil_tmp27 = (unsigned long )__cil_tmp26;
#line 157
    __cil_tmp28 = (unsigned long )nsdp;
#line 157
    if (__cil_tmp28 == __cil_tmp27) {
      goto while_1_break;
    } else {

    }
    }
#line 158
    __cil_tmp29 = (unsigned long )nsdp;
#line 158
    __cil_tmp30 = __cil_tmp29 + 18;
#line 158
    __cil_tmp31 = *((int16_t *)__cil_tmp30);
#line 158
    class = (int )__cil_tmp31;
#line 159
    __cil_tmp32 = 0 * 1UL;
#line 159
    __cil_tmp33 = 10 + __cil_tmp32;
#line 159
    __cil_tmp34 = (unsigned long )nsdp;
#line 159
    __cil_tmp35 = __cil_tmp34 + __cil_tmp33;
#line 159
    dname = (u_char *)__cil_tmp35;
#line 161
    i = 0;
    {
#line 161
    while (1) {
      while_2_continue: /* CIL Label */ ;
      {
#line 161
      __cil_tmp36 = (unsigned long )qp;
#line 161
      __cil_tmp37 = __cil_tmp36 + 129;
#line 161
      __cil_tmp38 = *((u_char *)__cil_tmp37);
#line 161
      __cil_tmp39 = (u_int )__cil_tmp38;
#line 161
      if (i < __cil_tmp39) {

      } else {
        goto while_2_break;
      }
      }
      {
#line 162
      __cil_tmp40 = (unsigned long )nsdp;
#line 162
      __cil_tmp41 = i * 8UL;
#line 162
      __cil_tmp42 = 0 + __cil_tmp41;
#line 162
      __cil_tmp43 = (unsigned long )qp;
#line 162
      __cil_tmp44 = __cil_tmp43 + __cil_tmp42;
#line 162
      __cil_tmp45 = *((struct databuf **)__cil_tmp44);
#line 162
      __cil_tmp46 = (unsigned long )__cil_tmp45;
#line 162
      if (__cil_tmp46 == __cil_tmp40) {
        goto need_sysquery;
      } else {

      }
      }
#line 161
      i = i + 1;
    }
    while_2_break: /* CIL Label */ ;
    }
    {
#line 169
    __cil_tmp47 = (char const   *)dname;
#line 169
    np = nlookup(__cil_tmp47, & tmphtp, & fname, 1);
    }
    {
#line 170
    __cil_tmp48 = (void *)0;
#line 170
    __cil_tmp49 = (unsigned long )__cil_tmp48;
#line 170
    __cil_tmp50 = (unsigned long )np;
#line 170
    if (__cil_tmp50 == __cil_tmp49) {
#line 171
      found_arr = 0;
      goto need_sysquery;
    } else {

    }
    }
    {
#line 174
    __cil_tmp51 = (unsigned long )dname;
#line 174
    __cil_tmp52 = & fname;
#line 174
    __cil_tmp53 = *__cil_tmp52;
#line 174
    __cil_tmp54 = (unsigned long )__cil_tmp53;
#line 174
    if (__cil_tmp54 != __cil_tmp51) {
      {
#line 175
      tmp___0 = findMyZone(np, class);
      }
#line 175
      if (tmp___0 == 0) {
        {
#line 176
        __cil_tmp55 = (void *)0;
#line 176
        __cil_tmp56 = (unsigned long )__cil_tmp55;
#line 176
        __cil_tmp57 = (unsigned long )np;
#line 176
        if (__cil_tmp57 != __cil_tmp56) {

        } else {
          {
#line 176
          __assert_fail("np != ((void *)0)", "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c",
                        176U, "nslookup");
          }
        }
        }
        {
#line 177
        while (1) {
          while_3_continue: /* CIL Label */ ;
          {
#line 177
          __cil_tmp58 = (void *)0;
#line 177
          __cil_tmp59 = (unsigned long )__cil_tmp58;
#line 177
          __cil_tmp60 = (unsigned long )np;
#line 177
          if (__cil_tmp60 != __cil_tmp59) {

          } else {
            goto while_3_break;
          }
          }
#line 178
          __cil_tmp61 = (unsigned long )np;
#line 178
          __cil_tmp62 = __cil_tmp61 + 16;
#line 178
          dp = *((struct databuf **)__cil_tmp62);
          {
#line 178
          while (1) {
            while_4_continue: /* CIL Label */ ;
#line 178
            if (dp) {

            } else {
              goto while_4_break;
            }
            {
#line 179
            tmp = match(dp, class, 2);
            }
#line 179
            if (tmp) {
              {
#line 181
              __cil_tmp63 = (unsigned long )dp;
#line 181
              __cil_tmp64 = __cil_tmp63 + 24;
#line 181
              __cil_tmp65 = *((int16_t *)__cil_tmp64);
#line 181
              __cil_tmp66 = (int )__cil_tmp65;
#line 181
              if (__cil_tmp66 != 0) {
                {
#line 185
                __cil_tmp67 = (char const   *)complaint;
#line 185
                __cil_tmp68 = (char const   *)dname;
#line 185
                __cil_tmp69 = (struct databuf  const  *)dp;
#line 185
                __cil_tmp70 = (struct databuf  const  *)nsdp;
#line 185
                nslookupComplain(sysloginfo, syslogdname, __cil_tmp67, __cil_tmp68,
                                 __cil_tmp69, __cil_tmp70);
                }
                goto need_sysquery;
              } else {
#line 192
                found_arr = 0;
                goto need_sysquery;
              }
              }
            } else {

            }
#line 178
            dp = *((struct databuf **)dp);
          }
          while_4_break: /* CIL Label */ ;
          }
        }
        while_3_break: /* CIL Label */ ;
        }
#line 198
        found_arr = 0;
        goto need_sysquery;
      } else {
        goto while_1_continue;
      }
    } else {

    }
    }
    goto while_1_break;
  }
  while_1_break: /* CIL Label */ ;
  }
  need_sysquery: 
#line 211
  return (n - naddr);
}
}
#line 216 "../versisec/bind/progs2/bindCVE-2001-0011nslookupComplain_big_ok.c"
int main(void) 
{ struct databuf *nsp[2] ;
  struct qinfo qp ;
  char sysloginfo[5] ;
  char syslogdname[5] ;
  unsigned long __cil_tmp5 ;
  unsigned long __cil_tmp6 ;
  unsigned long __cil_tmp7 ;
  unsigned long __cil_tmp8 ;
  void *__cil_tmp9 ;
  unsigned long __cil_tmp10 ;
  unsigned long __cil_tmp11 ;
  unsigned long __cil_tmp12 ;
  unsigned long __cil_tmp13 ;
  unsigned long __cil_tmp14 ;
  unsigned long __cil_tmp15 ;
  struct databuf **__cil_tmp16 ;
  char const   *__cil_tmp17 ;
  char const   *__cil_tmp18 ;

  {
  {
#line 223
  __cil_tmp5 = 0 * 8UL;
#line 223
  __cil_tmp6 = (unsigned long )(nsp) + __cil_tmp5;
#line 223
  *((struct databuf **)__cil_tmp6) = & dummybuf;
#line 224
  __cil_tmp7 = 1 * 8UL;
#line 224
  __cil_tmp8 = (unsigned long )(nsp) + __cil_tmp7;
#line 224
  __cil_tmp9 = (void *)0;
#line 224
  *((struct databuf **)__cil_tmp8) = (struct databuf *)__cil_tmp9;
#line 226
  __cil_tmp10 = 4 * 1UL;
#line 226
  __cil_tmp11 = (unsigned long )(sysloginfo) + __cil_tmp10;
#line 226
  *((char *)__cil_tmp11) = (char)0;
#line 227
  __cil_tmp12 = 4 * 1UL;
#line 227
  __cil_tmp13 = (unsigned long )(syslogdname) + __cil_tmp12;
#line 227
  *((char *)__cil_tmp13) = (char)0;
#line 230
  __cil_tmp14 = 0 * 8UL;
#line 230
  __cil_tmp15 = (unsigned long )(nsp) + __cil_tmp14;
#line 230
  __cil_tmp16 = (struct databuf **)__cil_tmp15;
#line 230
  __cil_tmp17 = (char const   *)(& sysloginfo);
#line 230
  __cil_tmp18 = (char const   *)(& syslogdname);
#line 230
  nslookup(__cil_tmp16, & qp, __cil_tmp17, __cil_tmp18);
  }
#line 235
  return (0);
}
}
